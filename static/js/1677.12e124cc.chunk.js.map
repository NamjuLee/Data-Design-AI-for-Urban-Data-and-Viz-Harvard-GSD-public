{"version":3,"file":"static/js/1677.12e124cc.chunk.js","mappings":"sSAIaA,EAAQ,0CAIjB,aAAkC,IAAD,EAArBC,EAAU,uDAAG,QAAM,gBAC3B,cAAMA,IAHVC,gBAAU,EAIN,IAAMC,EAAQ,EAAKA,MACnB,EAAKC,OAAOC,SAASC,IAAI,EAAG,EAAG,GAa/B,IAAMC,EAAW,EACZ,GAAI,EAAG,EACR,GAAI,EAAG,GACN,EAAG,EAAG,EACP,EAAG,EAAG,GACL,GAAI,GAAI,EACT,GAAI,GAAI,GACP,EAAG,GAAI,EACR,EAAG,GAAI,GAGLC,EAAU,CACZ,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,GAGJC,EAAS,CACX,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,GAGJC,EAAW,IAAIC,EAAAA,IAAwB,CACzCC,KAAMD,EAAAA,IACNE,cAAc,IAEZC,EAAW,IAAIH,EAAAA,IACrBG,EAASC,SAASP,GAClBM,EAASE,aAAa,WAAY,IAAIL,EAAAA,IAA6BJ,EAAU,IAC7EO,EAASE,aAAa,QAAS,IAAIL,EAAAA,IAA6BF,EAAQ,IAExEK,EAASG,uBACTH,EAASI,qBAET,IAAMC,EAAO,IAAIR,EAAAA,IAAWG,EAAUJ,GAIzB,OAHbP,EAAMiB,IAAID,GAGV,EAAKE,QAAQ,CACjB,CAAC,iBA1EgB,C,SAASC,c","sources":["PART_11_Web_Visualization_3D_for_GIS/LAB_Web_06_Mesh/index.ts"],"sourcesContent":["import * as THREE from 'three';\r\nimport { RendererThree, getCSVFromURL } from '../../lib';\r\n\r\n\r\nexport class Solution extends RendererThree {\r\n\r\n    pointLight: THREE.PointLight\r\n\r\n    constructor(id: string = 'main') {\r\n        super(id)\r\n        const scene = this.scene;\r\n        this.camera.position.set(0, 9, 9);\r\n\r\n\r\n        /*\r\n              6----7\r\n             /|   /|\r\n            2----3 |\r\n            | |  | |\r\n            | 4--|-5\r\n            |/   |/\r\n            0----1\r\n        */\r\n\r\n        const vertices = [\r\n            -1, -1, 1,  // 0\r\n            1, -1, 1,  // 1\r\n            -1, 1, 1,  // 2\r\n            1, 1, 1,  // 3\r\n            -1, -1, -1,  // 4\r\n            1, -1, -1,  // 5\r\n            -1, 1, -1,  // 6\r\n            1, 1, -1,  // 7\r\n        ];\r\n\r\n        const indices = [\r\n            0, 3, 2,\r\n            0, 1, 3,\r\n            4, 2, 6,\r\n            4, 0, 2,\r\n            1, 7, 3,\r\n            1, 5, 7,\r\n            5, 6, 7,\r\n            5, 4, 6,\r\n            2, 7, 6,\r\n            2, 3, 7,\r\n            4, 1, 0,\r\n            4, 5, 1,\r\n        ];\r\n\r\n        const colors = [\r\n            1, 0, 0,\r\n            1, 1, 0,\r\n            0, 1, 0,\r\n            0, 1, 1,\r\n            0, 0, 1,\r\n            1, 0, 1,\r\n            0, 0, 0,\r\n            1, 1, 1,\r\n\r\n        ]\r\n        const material = new THREE.MeshBasicMaterial({\r\n            side: THREE.DoubleSide,\r\n            vertexColors: true,\r\n        });\r\n        const geometry = new THREE.BufferGeometry();\r\n        geometry.setIndex(indices);\r\n        geometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3));\r\n        geometry.setAttribute('color', new THREE.Float32BufferAttribute(colors, 3));\r\n\r\n        geometry.computeVertexNormals();\r\n        geometry.computeBoundingBox();\r\n\r\n        const mesh = new THREE.Mesh(geometry, material);\r\n        scene.add(mesh);\r\n\r\n\r\n        this.start();\r\n    }\r\n}"],"names":["Solution","id","pointLight","scene","camera","position","set","vertices","indices","colors","material","THREE","side","vertexColors","geometry","setIndex","setAttribute","computeVertexNormals","computeBoundingBox","mesh","add","start","RendererThree"],"sourceRoot":""}