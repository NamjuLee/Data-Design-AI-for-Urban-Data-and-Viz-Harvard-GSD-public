{"version":3,"file":"static/js/166.89575693.chunk.js","mappings":"qSAGaA,EAAQ,0CAIjB,aAAkC,IAAD,EAArBC,EAAU,uDAAG,QAAM,gBAC3B,cAAMA,IAHVC,gBAAU,EAKN,EAAKC,OAAOC,SAASC,IAAK,EAAG,GAAI,IAEjC,IAAMC,EAAW,IAAIC,EAAAA,IAAwB,CACzCC,MAAO,SACPC,UAAW,KAGTC,EAAS,GACfA,EAAOC,KAAM,IAAIJ,EAAAA,KAAiB,GAAI,EAAG,IACzCG,EAAOC,KAAM,IAAIJ,EAAAA,IAAe,EAAG,GAAI,IACvCG,EAAOC,KAAM,IAAIJ,EAAAA,IAAe,GAAI,EAAG,IAEvC,IAAMK,GAAY,IAAIL,EAAAA,KAAuBM,cAAeH,GACtDI,EAAO,IAAIP,EAAAA,IAAYK,EAAWN,GAI3B,OAHb,EAAKS,MAAMC,IAAKF,GAGhB,EAAKG,QAAQ,CACjB,CAKC,OALA,8BAED,SAAcF,GAGd,KAAC,EA9BgB,C,SAASG,c","sources":["PART_11_Web_Visualization_3D_for_GIS/LAB_Web_04_LinePolyline/index.ts"],"sourcesContent":["import * as THREE from 'three';\r\nimport { RendererThree } from '../../lib';\r\n\r\nexport class Solution extends RendererThree {\r\n\r\n    pointLight: THREE.PointLight\r\n\r\n    constructor(id: string = 'main') {\r\n        super(id)\r\n\r\n        this.camera.position.set( 0, 50, 50 );\r\n\r\n        const material = new THREE.LineBasicMaterial({\r\n            color: 0xff0000,\r\n            linewidth: 10,\r\n        });\r\n        \r\n        const points = [];\r\n        points.push( new THREE.Vector3( - 10, 0, 0 ) );\r\n        points.push( new THREE.Vector3( 0, 10, 0 ) );\r\n        points.push( new THREE.Vector3( 10, 0, 0 ) );\r\n        \r\n        const geometry1 = new THREE.BufferGeometry().setFromPoints( points );\r\n        const line = new THREE.Line( geometry1, material );\r\n        this.scene.add( line );\r\n\r\n\r\n        this.start();\r\n    }\r\n\r\n    public update(scene: THREE.Scene) {\r\n\r\n\r\n    }\r\n\r\n}\r\n"],"names":["Solution","id","pointLight","camera","position","set","material","THREE","color","linewidth","points","push","geometry1","setFromPoints","line","scene","add","start","RendererThree"],"sourceRoot":""}