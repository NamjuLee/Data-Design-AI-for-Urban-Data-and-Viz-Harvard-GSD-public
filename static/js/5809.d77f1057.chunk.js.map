{"version":3,"file":"static/js/5809.d77f1057.chunk.js","mappings":"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","sources":["PART_9_LAB_Visualization_Analysis/Lab/31_UrbanNetwork/01_Interaction.ts","PART_9_LAB_Visualization_Analysis/Lab/31_UrbanNetwork/02_Network.ts"],"sourcesContent":["import { RendererJSAPI } from '../../../lib'\r\n\r\nimport { distanceTo } from 'njscore';\r\n\r\nexport class Solution extends RendererJSAPI {\r\n\r\n    pts: Point[] = [];\r\n    lns: Line[] = [];\r\n\r\n    path: any;\r\n\r\n    previousPt: Point | undefined = undefined;\r\n\r\n    ptStart: InteractivePoint;\r\n    ptEnd: InteractivePoint;\r\n    captured: InteractivePoint | undefined = undefined;\r\n\r\n    constructor(view: any) {\r\n        super(view);\r\n        // TODO\r\n        // You code goes here for one time operation\r\n\r\n        // disable interaction with a base map\r\n        // https://developers.arcgis.com/javascript/latest/api-reference/esri-views-MapView.html\r\n        this.mView.on(\"drag\", (event) => {\r\n            event.stopPropagation();\r\n        });\r\n        this.mView.navigation.mouseWheelZoomEnabled = false;\r\n        this.center(-71.102761, 42.366946);\r\n        this.zoom(15)\r\n\r\n\r\n        this.ptStart = new InteractivePoint(315, 90);\r\n        this.ptEnd = new InteractivePoint(1268, 1120);\r\n\r\n        // !! you should execute it for rendering\r\n        this.start();\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n        // TODO\r\n        // You code goes here for the rending loop\r\n\r\n\r\n        this.lns.map( (l: Line) => {\r\n            return l.render(ctx, this.time);\r\n        });\r\n        this.pts.map( (p: Point) => {\r\n            return  p.render(ctx, this.time);\r\n        });\r\n\r\n\r\n        if (this.path) {\r\n\r\n            ctx.beginPath();\r\n            ctx.moveTo(this.path[0].x, this.path[0].y);\r\n            for(let i = 1; i < this.path.length; ++i) {\r\n                ctx.lineTo(this.path[i].x, this.path[i].y);\r\n            }\r\n            ctx.lineWidth = 2;\r\n            ctx.strokeStyle = '#f00';\r\n            ctx.stroke();\r\n\r\n        }\r\n\r\n        this.ptStart.Render(ctx, this.time);\r\n        this.ptEnd.Render(ctx, this.time);\r\n\r\n        // !! can stop render after this frame.\r\n        // this.isStatic = true;\r\n    }\r\n    public mouseDown(x: number, y: number): void {\r\n        if (this.ptStart.inInside(x,y)) {\r\n            this.captured = this.ptStart;\r\n            return;\r\n        }\r\n        if (this.ptEnd.inInside(x,y)) {\r\n            this.captured = this.ptEnd;\r\n            return;\r\n        }\r\n       \r\n    }\r\n    public mouseUp(x: number, y: number): void {\r\n        this.captured = undefined;\r\n    }\r\n    public mouseDrag(x: number, y: number): void {\r\n        // TODO\r\n    }\r\n    public mouseClick(x: number, y: number): void {\r\n\r\n        if (this.previousPt === undefined) {\r\n            const p = new Point(x, y);\r\n            this.previousPt = p\r\n            this.pts.push(p);\r\n        } else {\r\n            const p = new Point(x, y);\r\n            this.pts.push(p);\r\n            \r\n            this.lns.push(new Line(this.previousPt, p));\r\n            this.previousPt = undefined;\r\n\r\n\r\n       }\r\n\r\n\r\n    }\r\n    public mouseMove(x: number, y: number) {\r\n        if (this.captured) {\r\n            console.log(x, y)\r\n            this.captured.x = x;\r\n            this.captured.y = y;\r\n        }    \r\n    }\r\n}\r\n\r\n\r\nexport class InteractivePoint {\r\n    x: number;\r\n    y: number;\r\n    r: number = 10;\r\n    constructor(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    public Render(ctx: CanvasRenderingContext2D, t: number) {\r\n        ctx.beginPath();\r\n        ctx.arc(this.x, this.y, Math.sin(t) + this.r, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fillStyle = '#00f'\r\n        ctx.fill();\r\n\r\n        ctx.strokeStyle = '#fff'\r\n        ctx.stroke();\r\n    }\r\n    public inInside(x: number, y: number) {\r\n        if (distanceTo(x, y, 0, this.x, this.y, 0) < this.r + 2){\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport class Line {\r\n    public p0: Point;\r\n    public p1: Point;\r\n    public lineWidth = 2;\r\n    constructor(p0: Point, p1: Point) {\r\n        this.p0 = p0;\r\n        this.p1 = p1;\r\n    }\r\n    render(ctx: CanvasRenderingContext2D, t: number) {\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.p0.x, this.p0.y);\r\n        ctx.lineTo(this.p1.x, this.p1.y);\r\n        ctx.closePath();\r\n\r\n        ctx.lineWidth = this.lineWidth;\r\n        ctx.strokeStyle = '#fff';\r\n        ctx.stroke();\r\n\r\n    }\r\n}\r\nexport class Point {\r\n    x: number;\r\n    y: number;\r\n    z: number = 0;\r\n    r: number = 6;\r\n    constructor(x: number, y: number)  {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    render(ctx: CanvasRenderingContext2D, t: number) {\r\n        ctx.beginPath();\r\n        ctx.arc(this.x, this.y, Math.sin(t) + this.r, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fillStyle = '#0f0'\r\n        ctx.fill();\r\n        ctx.strokeStyle = '#fff'\r\n        ctx.stroke();\r\n    }\r\n}","import { RendererJSAPI } from '../../../lib'\r\n\r\nimport { getLineSeg, distanceTo, Graph, Node } from 'njscore';\r\n\r\nimport { Point, Line, InteractivePoint } from './01_Interaction';\r\n\r\nexport class Solution extends RendererJSAPI {\r\n    network: Network;\r\n\r\n    pts: Point[] = [];\r\n    lns: Line[] = [];\r\n\r\n    path: any;\r\n\r\n    previousPt: Point | undefined = undefined;\r\n\r\n    ptStart: InteractivePoint;\r\n    ptEnd: InteractivePoint;\r\n    captured: InteractivePoint | undefined = undefined;\r\n\r\n    constructor(view: any) {\r\n        super(view);\r\n        // TODO\r\n        // You code goes here for one time operation\r\n\r\n        // disable interaction with a base map\r\n        // https://developers.arcgis.com/javascript/latest/api-reference/esri-views-MapView.html\r\n        this.mView.on(\"drag\", (event) => {\r\n            event.stopPropagation();\r\n        });\r\n        this.mView.navigation.mouseWheelZoomEnabled = false;\r\n        this.center(-71.102761, 42.366946);\r\n        this.zoom(15)\r\n\r\n        this.network = new Network();\r\n\r\n        this.ptStart = new InteractivePoint(315, 90);\r\n        this.ptEnd = new InteractivePoint(1268, 1120);\r\n\r\n        // !! you should execute it for rendering\r\n        this.start();\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n        // TODO\r\n        // You code goes here for the rending loop\r\n\r\n        this.lns.map( (l: Line) => {\r\n            return l.render(ctx, this.time);\r\n        });\r\n        this.pts.map( (p: Point) => {\r\n            return p.render(ctx, this.time);\r\n        });\r\n\r\n\r\n        this.network.render(ctx);\r\n\r\n        if (this.path) {\r\n\r\n            ctx.beginPath();\r\n            ctx.moveTo(this.path[0].x, this.path[0].y);\r\n            for(let i = 1; i < this.path.length; ++i) {\r\n                ctx.lineTo(this.path[i].x, this.path[i].y);\r\n            }\r\n            ctx.lineWidth = 2;\r\n            ctx.strokeStyle = '#f00';\r\n            ctx.stroke();\r\n\r\n        }\r\n\r\n        this.ptStart.Render(ctx, this.time);\r\n        this.ptEnd.Render(ctx, this.time);\r\n\r\n        // !! can stop render after this frame.\r\n        // this.isStatic = true;\r\n    }\r\n    public mouseDown(x: number, y: number): void {\r\n        if (this.ptStart.inInside(x,y)) {\r\n            this.captured = this.ptStart;\r\n            return;\r\n        }\r\n        if (this.ptEnd.inInside(x,y)) {\r\n            this.captured = this.ptEnd;\r\n            return;\r\n        }\r\n       \r\n    }\r\n    public mouseUp(x: number, y: number): void {\r\n        this.captured = undefined;\r\n    }\r\n    public mouseDrag(x: number, y: number): void {\r\n        // TODO\r\n    }\r\n    public mouseClick(x: number, y: number): void {\r\n\r\n        if (this.previousPt === undefined) {\r\n            const p = new Point(x, y);\r\n            this.previousPt = p\r\n            this.pts.push(p);\r\n        } else {\r\n            const p = new Point(x, y);\r\n            this.pts.push(p);\r\n            \r\n            this.lns.push(new Line(this.previousPt, p));\r\n            this.previousPt = undefined;\r\n\r\n            const obj = (JSON.parse(JSON.stringify(this.lns)));\r\n            \r\n            this.network = new Network();\r\n            this.network.addLine(obj);\r\n\r\n            this.path = this.network.getPath(\r\n                    { x: this.ptStart.x, y: this.ptStart.y, z: 0 }, \r\n                    { x: this.ptEnd.x,   y: this.ptEnd.y,   z: 0\r\n                });\r\n\r\n        }\r\n\r\n    }\r\n    public mouseMove(x: number, y: number) {\r\n        if (this.captured) {\r\n            this.captured.x = x;\r\n            this.captured.y = y;\r\n\r\n            if (this.network.isActivated) {\r\n                this.path = this.network.getPath(\r\n                    { x: this.ptStart.x, y: this.ptStart.y, z: 0 }, \r\n                    { x: this.ptEnd.x,   y: this.ptEnd.y,   z: 0\r\n                });\r\n        \r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass Network {\r\n    graph: Graph;\r\n    isActivated = false;\r\n    constructor() {\r\n        this.graph = new Graph();\r\n    }\r\n    public addLine(lns: any) {\r\n        const lineSeg = getLineSeg(lns);\r\n        this.graph.initByLines(lineSeg)\r\n        console.log(this.graph);\r\n        this.isActivated = true;\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n        \r\n        this.graph.edges.map((e, i) => {\r\n            ctx.beginPath();\r\n            ctx.moveTo(e.n0.x, e.n0.y);\r\n            ctx.lineTo(e.n1.x, e.n1.y);\r\n            ctx.lineWidth = 1;\r\n            ctx.strokeStyle = '#fff';\r\n            ctx.stroke();\r\n            return undefined;\r\n        });\r\n\r\n        this.graph.nodes.map((n) => {\r\n            ctx.beginPath();\r\n            ctx.arc(n.x, n.y, 5, 0, Math.PI * 2);\r\n            ctx.fillStyle = '#fff';\r\n            ctx.fill();\r\n            return undefined;\r\n        });\r\n\r\n        if (this.graph.nodeOrigin) {\r\n            ctx.beginPath();\r\n            ctx.arc(this.graph.nodeOrigin.x, this.graph.nodeOrigin.y, 7, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fillStyle = '#f00';\r\n            ctx.fill();\r\n        }\r\n\r\n        if (this.graph.nodeTarget) {\r\n            ctx.beginPath();\r\n            ctx.arc(this.graph.nodeTarget.x, this.graph.nodeTarget.y, 7, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fillStyle = '#f00';\r\n            ctx.fill();\r\n        }\r\n    }\r\n    public getPath(p0, p1) {\r\n        const nodeStart = this.graph.findClosestNode(p0);\r\n        const nodeEnd = this.graph.findClosestNode(p1);\r\n\r\n        this.graph.propagationByNode(nodeStart);\r\n        // this.graph.propagationByNode(nodeStart, costFnDistance, 0.1);\r\n\r\n        const nodes = this.graph.backpropagation(nodeEnd);\r\n        return nodes;\r\n    }\r\n}\r\nconst costFnDistance = (p0: Node, p1: Node, beta: number = 0.0002) => {\r\n    return distanceTo(p0.x, p0.y, p0.z, p1.x, p1.y, p1.z);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["Solution","view","pts","lns","path","previousPt","undefined","ptStart","ptEnd","captured","mView","on","event","stopPropagation","navigation","mouseWheelZoomEnabled","center","zoom","InteractivePoint","start","ctx","this","map","l","render","time","p","beginPath","moveTo","x","y","i","length","lineTo","lineWidth","strokeStyle","stroke","Render","inInside","Point","push","Line","console","log","RendererJSAPI","r","t","arc","Math","sin","PI","closePath","fillStyle","fill","distanceTo","p0","p1","z","network","Network","obj","JSON","parse","stringify","addLine","getPath","isActivated","graph","Graph","lineSeg","getLineSeg","initByLines","edges","e","n0","n1","nodes","n","nodeOrigin","nodeTarget","nodeStart","findClosestNode","nodeEnd","propagationByNode","backpropagation"],"sourceRoot":""}