{"version":3,"file":"static/js/8023.ec511d1d.chunk.js","mappings":"8OAIoEA,E,sDAAE,SAASC,EAAEA,EAAEC,GAAG,IAAIC,EAAED,EAAEE,aAAaD,EAAE,iBAAiBA,GAAG,SAASA,GAAG,SAASA,GAAG,WAAWA,GAAG,wBAAwBA,GAAG,SAASA,IAAIA,EAAE,QAAQA,EAAE,OAAOD,EAAEE,aAAaD,EAAE,IAAME,GAAEC,EAAAA,EAAAA,IAAEJ,EAAEK,QAAQ,cAAcL,EAAEK,OAAOC,WAAWC,oBAAoB,UAAU,CAACC,IAAIT,EAAEU,QAAQT,GAAG,CAACK,OAAOF,IAAIO,KAAI,yCAAE,WAAMN,GAAC,4FAAoBA,EAAEO,KAAI,sBAAIP,EAAEO,gBAAgBC,aAAW,oBAAO,SAASX,GAAG,SAASA,GAAG,SAASA,IAAIY,EAAE,IAAIC,KAAK,CAACV,EAAEO,OAAO,SAASV,GAAG,SAASA,IAAIH,IAAIA,EAAE,IAAIiB,gBAAgBC,EAAElB,EAAEmB,WAAWJ,GAAG,SAASZ,IAAG,0BAAOiB,EAAEC,KAAKC,MAAMJ,GAAG,MAAK,uBAA8C,MAA9C,yBAAgBZ,GAAC,4BAAOI,IAAIT,EAAEsB,eAAerB,IAAS,IAAIsB,EAAAA,EAAE,iBAAiB,KAAEC,QAAQnB,GAAE,YAAIc,EAAEM,MAAK,iBAA4C,MAApCpB,GAAC,kBAAKc,EAAEM,OAAK,IAAChB,IAAIT,EAAEsB,eAAerB,IAAS,IAAIsB,EAAAA,EAAE,iBAAiBJ,EAAEM,MAAMD,QAAQnB,GAAE,gCAAmB,GAAnB,KAAO,WAAWH,GAAC,sBAAkB,OAAfG,EAAEO,KAAKN,OAAOF,EAAC,UAASsB,MAAMrB,EAAEO,KAAKH,IAAIJ,EAAEO,MAAK,QAAhCe,EAAC,oBAAwCzB,EAAC,OAAM,SAAN,KAAY,GAAe,SAAf,KAAqB,GAAe,WAAf,KAAuB,GAAe,SAAf,KAAqB,oBAA5D,OAAJ0B,EAAEd,EAAE,6BAAqB,OAAJc,EAAET,EAAE,6BAAuB,OAAJS,EAAED,EAAE,6BAAqB,OAAJC,EAAEX,EAAE,6BAAcW,EAAEvB,EAAEO,KAAI,iCAAO,CAACA,KAAKgB,EAAEN,eAAerB,EAAE4B,IAAIxB,EAAEwB,IAAIpB,IAAIT,IAAE,yDAAC,mDAA5pB,GAA8pB,C","sources":["../node_modules/@arcgis/core/core/workers/request.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport e from\"../Error.js\";import{unwrap as t}from\"../maybe.js\";let r;function s(s,a){let n=a.responseType;n?\"array-buffer\"!==n&&\"blob\"!==n&&\"json\"!==n&&\"native\"!==n&&\"native-request-init\"!==n&&\"text\"!==n&&(n=\"text\"):n=\"json\",a.responseType=n;const o=t(a.signal);return delete a.signal,globalThis.invokeStaticMessage(\"request\",{url:s,options:a},{signal:o}).then((async t=>{let i,l,u,c,b;if(t.data)if(t.data instanceof ArrayBuffer){if(!(\"json\"!==n&&\"text\"!==n&&\"blob\"!==n||(i=new Blob([t.data]),\"json\"!==n&&\"text\"!==n||(r||(r=new FileReaderSync),c=r.readAsText(i),\"json\"!==n)))){try{l=JSON.parse(c||null)}catch(f){const t={...f,url:s,requestOptions:a};throw new e(\"request:server\",f.message,t)}if(l.error){const t={...l.error,url:s,requestOptions:a};throw new e(\"request:server\",l.error.message,t)}}}else\"native\"===n&&(t.data.signal=o,u=await fetch(t.data.url,t.data));switch(n){case\"blob\":b=i;break;case\"json\":b=l;break;case\"native\":b=u;break;case\"text\":b=c;break;default:b=t.data}return{data:b,requestOptions:a,ssl:t.ssl,url:s}}))}export{s as execute};\n"],"names":["r","s","a","n","responseType","o","t","signal","globalThis","invokeStaticMessage","url","options","then","data","ArrayBuffer","i","Blob","FileReaderSync","c","readAsText","l","JSON","parse","requestOptions","e","message","error","fetch","u","b","ssl"],"sourceRoot":""}