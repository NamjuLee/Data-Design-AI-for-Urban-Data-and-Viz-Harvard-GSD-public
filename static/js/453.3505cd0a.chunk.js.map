{"version":3,"file":"static/js/453.3505cd0a.chunk.js","mappings":"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","sources":["PART_04_Geometry_Data/LAB_Web_07_GeometryAsDataStructure/GeometryAsDataStructure.ts","PART_04_Geometry_Data/LAB_Web_07_GeometryAsDataStructure/index.ts"],"sourcesContent":["export class Vector {\r\n    // ........................... static\r\n    static distance(v0: Vector, v1: Vector) {\r\n        // https://en.wikipedia.org/wiki/Distance\r\n        return Math.sqrt((v0.x - v1.x) * (v0.x - v1.x) + (v0.y - v1.y) * (v0.y - v1.y) + (v0.z - v1.z) * (v0.z - v1.z));\r\n    }\r\n\r\n    // ........................... instance \r\n    public x: number;\r\n    public y: number;\r\n    public z: number;\r\n    constructor(x: number, y: number, z: number = 0.0) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n    public toString() {\r\n        return `x: ${this.x}, y: ${this.y}, z: ${this.z} `;\r\n    }\r\n    public toJson() {\r\n        return {\r\n            \"x\": this.x,\r\n            \"y\": this.y,\r\n            \"z\": this.z\r\n        };\r\n    }\r\n    public toDraw() {\r\n        // TODO based on your renderer!\r\n    }\r\n}\r\nexport class Point {\r\n    vec: Vector;\r\n    color: Color;\r\n    constructor(x: number = 0, y: number = 0, z: number = 0) {\r\n        this.vec = new Vector(x, y, z);\r\n        this.color = new Color(0, 255, 0);\r\n    }\r\n    public distanceTo(other: Point) {\r\n        return Vector.distance(this.vec, other.vec)\r\n    }\r\n    public setColor(r: number, g: number, b: number, a: number = 1.0) {\r\n        this.color.r = r;\r\n        this.color.g = g;\r\n        this.color.b = b;\r\n        this.color.a = a;\r\n    }\r\n    public getHex() {\r\n        return this.color.toHex();\r\n    }\r\n}\r\nexport class Color {\r\n    public r: number;\r\n    public g: number;\r\n    public b: number;\r\n    public a: number;\r\n    constructor(r: number = 255, g: number = 255, b: number = 255, a: number = 1.0) {\r\n        this.r = r;\r\n        this.g = g;\r\n        this.b = b;\r\n        this.a = a;\r\n    }\r\n    public normaized() {\r\n        return [this.r /= 255, this.g /= 255, this.b /= 255]\r\n    }\r\n    // https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\r\n    public toHex() {\r\n        return '#' + [Math.round(this.r), Math.round(this.g), Math.round(this.b)].map(x => {\r\n            const hex = x.toString(16);\r\n            return hex.length === 1 ? '0' + hex : hex;\r\n        }).join('');\r\n    }\r\n    public toHSV() {\r\n        const r = this.r / 255;\r\n        const g = this.g / 255;\r\n        const b = this.b / 255;\r\n        const max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n        let h = max, s = max, v = max;\r\n        const d = max - min;\r\n        s = max === 0 ? 0 : d / max;\r\n\r\n        if (max === min) {\r\n            h = 0; // achromatic\r\n        } else {\r\n            switch (max) {\r\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n                case g: h = (b - r) / d + 2; break;\r\n                case b: h = (r - g) / d + 4; break;\r\n                default: break;\r\n            }\r\n\r\n            h /= 6;\r\n        }\r\n        return [h, s, v]; // 0 to 1\r\n    };\r\n}\r\nexport class Line {\r\n    p0: Point;\r\n    p1: Point;\r\n    constructor(point0: Point, point1: Point) {\r\n        console.log(this);\r\n        this.p0 = point0;\r\n        this.p1 = point1;\r\n\r\n    }\r\n    public getMidPoint() {\r\n        // https://en.wikipedia.org/wiki/Midpoint\r\n        return new Point(this.p0.vec.x + ((this.p1.vec.x + this.p0.vec.x) * 0.5), this.p0.vec.y + ((this.p1.vec.y + this.p0.vec.y) * 0.5), this.p0.vec.z + ((this.p1.vec.z + this.p0.vec.z) * 0.5));\r\n    }\r\n}\r\nexport class Polyline {\r\n    public pts: Point[];\r\n    public isOpen: boolean;\r\n    constructor(isOpen: boolean = false) {\r\n        this.pts = [];\r\n    }\r\n    public push(other: Point) {\r\n        this.pts.push(other);\r\n    }\r\n    public toString() {\r\n        return `Length of pts: ${this.pts.length}`;\r\n    }\r\n    public getLength() {\r\n        let totalDistance = 0.0;\r\n        for (let i = 0; i < this.pts.length - 1; ++i) {\r\n            let dis = this.pts[i].distanceTo(this.pts[i + 1])\r\n            totalDistance += dis;\r\n        }\r\n        return totalDistance;\r\n    }\r\n}\r\nexport class Curve {\r\n    public pts: Point[];\r\n    public isOpen: boolean;\r\n    public degree = 1;\r\n    constructor(degree: number = 1, isOpen: boolean = false) {\r\n        this.pts = [];\r\n        this.isOpen = isOpen;\r\n        this.degree = degree;\r\n        this.interpolation();\r\n    }\r\n    public add(other: Point) {\r\n        this.pts.push(other);\r\n    }\r\n    public toString() {\r\n        return `Length of pts: ${this.pts.length}`;\r\n    }\r\n    private interpolation() {\r\n        // TODO\r\n    }\r\n}\r\nexport class Polygon {\r\n    public pts: Point[] = []\r\n    constructor(pts: Point[] ) {\r\n        this.pts = pts;\r\n        // TODO\r\n    }\r\n    public add(other: Point) {\r\n        // TODO\r\n    }\r\n    public toString() {\r\n        // TODO\r\n    }\r\n    public getLength() {\r\n        // TODO\r\n    }\r\n    public getArea() {\r\n        // TODO\r\n    }\r\n}\r\nexport class Mesh {\r\n    vertex: Point[];\r\n    face: number[][];\r\n    constructor() {\r\n        this.vertex = [];\r\n        this.face = [];\r\n    }\r\n    public addVertex(other: Point) {\r\n        this.vertex.push(other);\r\n    }\r\n    public addFace(A: number, B: number, C: number) {\r\n        this.face.push([A, B, C]);\r\n    }\r\n    public toString() {\r\n        return `Length of pts: ${this.vertex.length}`;\r\n    }\r\n}","import { Vector, Color, Point, Line, Curve, Polyline, Polygon, Mesh}from './GeometryAsDataStructure';\r\n\r\nexport class Solution  {\r\n\r\n    constructor(div: HTMLElement) {\r\n\r\n        // ................................ vector\r\n        let v0 = new Vector(2, 3, 4);\r\n        let v1 = new Vector(5, 6, 7);\r\n\r\n        console.log('distance between v0 and v1: ', Vector.distance(v0, v1));\r\n        console.log(v0.toString());\r\n        console.log(v0.toJson());\r\n\r\n\r\n        // ................................ point\r\n        let p0 = new Point(0, 0, 0);\r\n        let p1 = new Point(3, 4, 5);\r\n\r\n        console.log('distance from p0 to p1', p0.distanceTo(p1))\r\n        p0.setColor(255, 0, 255);\r\n        console.log(p0.getHex());\r\n\r\n\r\n        // ................................ color\r\n        const myColorA = new Color(25, 100, 25, 1)\r\n        console.log(myColorA.toHex());\r\n        console.log(myColorA.toHSV()); // http://colorizer.org/\r\n\r\n\r\n        // ................................ line\r\n        let point0 = new Point(0, 0, 0);\r\n        let point1 = new Point(2.34, 5.4, 20);\r\n        let ln = new Line(point0, point1);\r\n        console.log(ln);\r\n        console.log(ln.getMidPoint());\r\n\r\n        // ................................ polyline\r\n        let pl = new Polyline();\r\n        pl.push(new Point(0, 1.25, 0))\r\n        pl.push(new Point(1, 2.5, 1))\r\n        pl.push(new Point(2, 1, 3.15))\r\n        pl.push(new Point(3, 2.5, 2))\r\n\r\n        console.log(pl.toString())\r\n        console.log(pl.getLength())\r\n\r\n\r\n        // ................................ curve\r\n        let curve = new Curve(1);\r\n        curve.add(new Point(0, 1.25, 0))\r\n        curve.add(new Point(1, 2.5, 1))\r\n        curve.add(new Point(2, 1, 3.15))\r\n        curve.add(new Point(3, 2.5, 2))\r\n        console.log(curve.toString())\r\n\r\n\r\n        // ................................ mesh\r\n        let mesh = new Mesh();\r\n        let xNum = 5;\r\n        let yNum = 5;\r\n        for (let j = 0; j < yNum; ++j) {\r\n            for (let i = 0; i < xNum; ++i) {\r\n                mesh.addVertex(new Point(i, j, Math.random() * 2));\r\n            }\r\n        }\r\n        for (let j = 0; j < yNum - 1; ++j) {\r\n            for (let i = 0; i < xNum - 1; ++i) {\r\n                let index = i + (j * xNum);\r\n                mesh.addFace(index, index + 1, index + xNum);\r\n                mesh.addFace(index + 1, index + xNum, index + xNum + 1);\r\n            }\r\n        }\r\n        console.log(mesh.toString())\r\n        console.log(mesh.vertex);\r\n        console.log(mesh.face);\r\n    }\r\n}\r\n"],"names":["Vector","x","y","z","this","v0","v1","Math","sqrt","Point","vec","color","Color","other","distance","r","g","b","a","toHex","round","map","hex","toString","length","join","s","max","min","h","v","d","Line","point0","point1","p0","p1","console","log","Polyline","pts","isOpen","push","totalDistance","i","distanceTo","Curve","degree","interpolation","Mesh","vertex","face","A","B","C","Solution","div","toJson","setColor","getHex","myColorA","toHSV","ln","getMidPoint","pl","getLength","curve","add","mesh","j","addVertex","random","yNum","xNum","index","addFace"],"sourceRoot":""}