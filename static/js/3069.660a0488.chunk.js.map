{"version":3,"file":"static/js/3069.660a0488.chunk.js","mappings":"sSAIaA,EAAQ,0CAIjB,aAAkC,IAAD,EAArBC,EAAU,uDAAG,QAAM,gBAC3B,cAAMA,IAHVC,gBAAU,EAIN,IAAMC,EAAQ,EAAKA,MAEnB,EAAKC,OAAOC,SAASC,IAAI,EAAG,EAAG,GAE/B,IAAMC,EAAe,IAAIC,EAAAA,IAAmB,SAAU,KACtDL,EAAMM,IAAIF,GAEV,EAAKL,WAAa,IAAIM,EAAAA,IAAiB,SAAU,KACjD,EAAKN,WAAWG,SAASK,EAAI,GAC7B,EAAKR,WAAWG,SAASM,EAAI,GAC7B,EAAKT,WAAWU,YAAa,EAC7BT,EAAMM,IAAI,EAAKP,YAKf,IAAIW,EAAgB,IAAIL,EAAAA,IAAoB,GAAI,IAC5CM,EAAgB,IAAIN,EAAAA,IAAwB,CAAEO,MAAO,SAAUC,KAAMR,EAAAA,MACrES,EAAY,IAAIT,EAAAA,IAAWK,EAAeC,GAC1CI,EAAS,IAAIV,EAAAA,IACjBU,EAAOC,cAA0B,IAAVC,KAAKC,IAC5BJ,EAAUK,aAAaJ,GACvBD,EAAUZ,SAASM,GAAK,GACxBM,EAAUM,eAAgB,EAC1BpB,EAAMM,IAAIQ,GAKV,IAAIO,EAAc,IAAIhB,EAAAA,IAAkB,EAAG,EAAG,GAC1CiB,EAAc,IAAIjB,EAAAA,IAAwB,CAAEO,MAAO,WACnDW,EAAW,IAAIlB,EAAAA,IAAWgB,EAAaC,GAC3CC,EAASd,YAAa,EACtBc,EAASrB,SAASsB,EAAI,EACtBxB,EAAMM,IAAIiB,GAEV,IAAIE,EAAe,IAAIpB,EAAAA,IAAwBgB,GAC3CK,EAAmB,IAAIrB,EAAAA,IAAwB,CAAEO,MAAO,IACxDe,EAAU,IAAItB,EAAAA,IAAmBoB,EAAcC,GACnDC,EAAQzB,SAASsB,EAAI,EACrBxB,EAAMM,IAAIqB,GAKV,IAAIC,EAAiB,IAAIvB,EAAAA,IAAqB,GAAK,GAAI,IACnDwB,EAAiB,IAAIxB,EAAAA,IAAwB,CAAEO,MAAO,UACtDkB,EAAa,IAAIzB,EAAAA,IAAWuB,EAAgBC,GAChDC,EAAWrB,YAAa,EACxBT,EAAMM,IAAIwB,GAEV,IAAIC,EAAkB,IAAI1B,EAAAA,IAAwBuB,GAC9CI,EAAqB,IAAI3B,EAAAA,IAAwB,CAAEO,MAAO,IAC1DqB,EAAa,IAAI5B,EAAAA,IAAmB0B,EAAiBC,GACzDhC,EAAMM,IAAI2B,GAKV,IAAIC,EAAe,IAAI7B,EAAAA,IAAmB,GAAK,EAAG,IAC9C8B,EAAe,IAAI9B,EAAAA,IAAwB,CAAEO,MAAO,MACpDwB,EAAW,IAAI/B,EAAAA,IAAW6B,EAAcC,GAC5CC,EAASlC,SAASsB,GAAK,EACvBY,EAAS3B,YAAa,EACtBT,EAAMM,IAAI8B,GAEV,IAAIC,EAAgB,IAAIhC,EAAAA,IAAwB6B,GAC5CI,EAAmB,IAAIjC,EAAAA,IAAwB,CAAEO,MAAO,IACxD2B,EAAW,IAAIlC,EAAAA,IAAmBgC,EAAeC,GAIxC,OAHbC,EAASrC,SAASsB,GAAK,EACvBxB,EAAMM,IAAIiC,GAEV,EAAKC,QAAQ,CACjB,CAKC,OALA,8BACD,SAAcxC,GACV,IAAIe,EAAS,IAAIV,EAAAA,IACjBU,EAAO0B,cAAwB,KAAVxB,KAAKC,IAC1BwB,KAAK3C,WAAWG,SAASiB,aAAaJ,EAC1C,KAAC,EApFgB,C,SAAS4B,c","sources":["PART_11_Web_Visualization_3D_for_GIS/LAB_Web_02_PrimitiveGeometry/index.ts"],"sourcesContent":["import * as THREE from 'three';\r\nimport { RendererThree, getCSVFromURL } from '../../lib';\r\n\r\n\r\nexport class Solution extends RendererThree {\r\n\r\n    pointLight: THREE.PointLight\r\n\r\n    constructor(id: string = 'main') {\r\n        super(id)\r\n        const scene = this.scene;\r\n\r\n        this.camera.position.set(9, 9, 9);\r\n\r\n        const ambientLight = new THREE.AmbientLight(0xcccccc, 0.25);\r\n        scene.add(ambientLight);\r\n\r\n        this.pointLight = new THREE.PointLight(0xffffff, 0.75);\r\n        this.pointLight.position.x = 10;\r\n        this.pointLight.position.y = 10;\r\n        this.pointLight.castShadow = true;\r\n        scene.add(this.pointLight);\r\n\r\n\r\n        // Plane\r\n        // https://threejs.org/docs/#api/en/geometries/PlaneGeometry\r\n        let geometryPlane = new THREE.PlaneGeometry(10, 10);\r\n        let materialPlane = new THREE.MeshPhongMaterial({ color: 0xffffff, side: THREE.DoubleSide });\r\n        let meshPlane = new THREE.Mesh(geometryPlane, materialPlane);\r\n        let matrix = new THREE.Matrix4();\r\n        matrix.makeRotationX( -Math.PI * 0.5);\r\n        meshPlane.applyMatrix4(matrix);\r\n        meshPlane.position.y = -0.5;\r\n        meshPlane.receiveShadow = true;\r\n        scene.add(meshPlane);\r\n\r\n\r\n        // cube\r\n        // https://threejs.org/docs/#api/en/geometries/BoxGeometry\r\n        let geometryBox = new THREE.BoxGeometry(1, 1, 1);\r\n        let materialBox = new THREE.MeshPhongMaterial({ color: 0xff0000 });\r\n        let meshCube = new THREE.Mesh(geometryBox, materialBox);\r\n        meshCube.castShadow = true;\r\n        meshCube.position.z = 2;\r\n        scene.add(meshCube);\r\n\r\n        let wireframeBox = new THREE.WireframeGeometry(geometryBox);\r\n        let materialSBoxWire = new THREE.MeshBasicMaterial({ color: 0x000000 });\r\n        let lineBox = new THREE.LineSegments(wireframeBox, materialSBoxWire);\r\n        lineBox.position.z = 2;\r\n        scene.add(lineBox);\r\n\r\n\r\n        // sphere\r\n        // https://threejs.org/docs/#api/en/geometries/SphereGeometry\r\n        let geometrySphere = new THREE.SphereGeometry(0.5, 16, 16);\r\n        let materialSphere = new THREE.MeshPhongMaterial({ color: 0x0ff000 });\r\n        let meshSphere = new THREE.Mesh(geometrySphere, materialSphere);\r\n        meshSphere.castShadow = true;\r\n        scene.add(meshSphere);\r\n\r\n        let wireframeSphere = new THREE.WireframeGeometry(geometrySphere);\r\n        let materialSphereWire = new THREE.MeshBasicMaterial({ color: 0x000000 });\r\n        let lineSphere = new THREE.LineSegments(wireframeSphere, materialSphereWire);\r\n        scene.add(lineSphere);\r\n\r\n\r\n        // cone\r\n        // https://threejs.org/docs/#api/en/geometries/ConeGeometry\r\n        let geometryCone = new THREE.ConeGeometry(0.5, 1, 16);\r\n        let materialCone = new THREE.MeshBasicMaterial({ color: 0x0000ff });\r\n        let meshCone = new THREE.Mesh(geometryCone, materialCone);\r\n        meshCone.position.z = -2\r\n        meshCone.castShadow = true;\r\n        scene.add(meshCone);\r\n\r\n        let wireframeCone = new THREE.WireframeGeometry(geometryCone);\r\n        let materialConeWire = new THREE.MeshBasicMaterial({ color: 0x000000 });\r\n        let lineCone = new THREE.LineSegments(wireframeCone, materialConeWire);\r\n        lineCone.position.z = -2\r\n        scene.add(lineCone);\r\n\r\n        this.start();\r\n    }\r\n    public update(scene: THREE.Scene) {\r\n        let matrix = new THREE.Matrix4();\r\n        matrix.makeRotationY(Math.PI * 0.011);\r\n        this.pointLight.position.applyMatrix4(matrix);\r\n    }\r\n}\r\n"],"names":["Solution","id","pointLight","scene","camera","position","set","ambientLight","THREE","add","x","y","castShadow","geometryPlane","materialPlane","color","side","meshPlane","matrix","makeRotationX","Math","PI","applyMatrix4","receiveShadow","geometryBox","materialBox","meshCube","z","wireframeBox","materialSBoxWire","lineBox","geometrySphere","materialSphere","meshSphere","wireframeSphere","materialSphereWire","lineSphere","geometryCone","materialCone","meshCone","wireframeCone","materialConeWire","lineCone","start","makeRotationY","this","RendererThree"],"sourceRoot":""}