{"version":3,"file":"static/js/3426.ea373ce0.chunk.js","mappings":"mUAIaA,EAAY,WAgBrB,aAAe,IAAD,4BAHdC,6BAAuB,OACvBC,8BAAwB,OACxBC,UAAoB,EAEhBC,IAAsBC,MAAM,SAACC,GAAW,IAAD,UAC8BA,EAAM,GAArE,EAAKL,wBAAuB,KAAE,EAAKC,yBAAwB,KAC7D,EAAKC,UAAW,EAChBI,QAAQC,IAAI,EAChB,IACAD,QAAQC,IAAI,kCAChB,CA8CC,OA9CA,mDACD,SAAmCC,GAAiB,IAAD,OAC/C,QAAqCC,IAAjCC,KAAKV,wBAET,OADAM,QAAQC,IAAI,mCACLI,EAAAA,EAAAA,MAAK,WACR,IAAMC,GAAIC,EAAAA,EAAAA,KAAS,CAACL,IAEdM,EADa,EAAKd,wBAAwBe,QAAQH,GAC/BI,WACzB,OAAO,EAAKC,2CAA2CH,EAAM,GACjE,IAPkDR,QAAQY,MAAM,kBAQpE,GAAC,wDACD,SAAmDN,GAC/C,IAAMO,EAASC,KAAKC,MAAMT,EAAI,IAC9B,OAAOb,EAAauB,WAAWH,EACnC,GAAC,0CACD,SAAoCX,GAAiB,IAAD,OAChD,QAAsCC,IAAlCC,KAAKT,yBACT,OAAOU,EAAAA,EAAAA,MAAK,WAER,IAc8B,EAdxBC,EAAIW,EAAAA,IAAY,CAACf,IAEjBgB,EAAa,EAAKvB,yBAAyBc,QAAQH,GAKnDa,EAAoB,GAEhBC,EAASC,MAAMC,KAAKJ,EAAWR,YAC/Ba,EAAeC,EAAyBJ,GAG9C,UACcG,GAAY,IAA1B,2BAA4B,CAAC,IAApBE,EAAC,QACAC,EAAsBN,EAAOK,GAC7BE,EAAO,SAAWlC,EAAauB,WAAWS,GAAK,iBAAmBC,EAAYE,QAAQ,GAC5F5B,QAAQC,IAAI0B,GACZR,EAAQU,KAAKF,EACjB,CAAC,+BAGL,IAAMG,EAASZ,EAAWa,QAAQ,GAAGrB,WAAW,GAChD,MAAO,CAACjB,EAAauB,WAAWc,GAASX,EAG7C,IA7BmDnB,QAAQY,MAAM,kBA8BrE,KAAC,EArEoB,GAAZnB,EACFuB,WAAa,CAChB,EAAG,SACH,EAAG,UACH,EAAG,eACH,EAAG,eACH,EAAG,YACH,EAAG,OACH,EAAG,QACH,EAAG,QACH,EAAG,SA8DX,IAAMnB,EAAmB,yCAAG,6FAIxB,OADImC,EAAI,iHACR,UACsCC,EAAAA,EAAAA,KAAgBD,GAAM,KAAD,EAE8D,OAFnHtC,EAAuB,OAE7BsC,EAAI,kHAAqH,UAClFC,EAAAA,EAAAA,KAAgBD,GAAM,KAAD,EAA9B,OAAxBrC,EAAwB,yBACvB,CAACD,EAA0BC,IAAyB,2CAC9D,kBAVwB,mCAWnB6B,EAA2B,SAAClB,GAE9B,IADA,IAAM4B,EAAU,IAAIb,MAAMf,EAAE6B,QACnBV,EAAI,EAAGA,EAAInB,EAAE6B,SAAUV,EAAKS,EAAQT,GAAKA,EAElD,OADAS,EAAQE,MAAK,SAACC,EAAGC,GAAQ,OAAOhC,EAAE+B,GAAK/B,EAAEgC,IAAM,EAAIhC,EAAE+B,GAAK/B,EAAEgC,GAAK,EAAI,CAAG,IACjEJ,CACX,E,WCzFaK,EAAe,WAOxB,WAAYC,GAAa,IAAD,4BANxBC,oBAAc,OACdC,kBAAY,OAEZC,IAAkB,GAAG,KACrBC,aAAO,OACPC,aAAO,OAgCAC,OAAS,SAACC,GAEb,IAAI,IAAItB,EAAI,EAAGA,EAAI,EAAKkB,IAAIR,SAAUV,EAClCsB,EAAIC,UAAY,wBAChBD,EAAIE,YACJF,EAAIG,IAAI,EAAKP,IAAIlB,GAAG,GAAI,EAAKkB,IAAIlB,GAAG,GAAI,EAAG,EAAa,EAAVX,KAAKqC,IACnDJ,EAAIK,YACJL,EAAIM,MAEZ,EAAC,KACMC,UAAY,SAACC,EAAWC,GAE3B,EAAKb,IAAId,KAAK,CAAC0B,EAAGC,GACtB,EAAC,KACMC,QAAU,SAACF,EAAWC,GAC1B,EAAKE,QAAQ,EAAKf,KAClB,EAAKA,IAAM,EACd,EA/CIvC,KAAKwC,QAAUe,SAASC,eAAepB,GAEvC,IAAMqB,EAAYF,SAASG,cAAc,OACzC1D,KAAKwC,QAAQmB,YAAYF,GACzBA,EAAUrB,GAAK,kBACfqB,EAAUG,MAAMC,WAAa,SAC7BJ,EAAUG,MAAME,UAAY,OAC5BL,EAAUG,MAAMG,WAAa,OAC7BN,EAAUG,MAAMI,YAAc,OAC9BP,EAAUG,MAAMK,MAAQ,QACxBR,EAAUG,MAAMM,OAAS,QAGzBlE,KAAKsC,aAAe,IAAIjD,EACxBW,KAAKqC,eAAiB,IAAI8B,EAAAA,eAAeV,GACzCzD,KAAKqC,eAAe+B,OAAOR,MAAMS,SAAW,QAE5CrE,KAAKqC,eAAe+B,OAAOH,MAAQ,IACnCjE,KAAKqC,eAAe+B,OAAOF,OAAS,IACpClE,KAAKqC,eAAe+B,OAAOR,MAAMU,WAAa,OAE9CtE,KAAKyC,QAAUc,SAASG,cAAc,OACtC1D,KAAKyC,QAAQ8B,YAAc,qCAC3Bd,EAAUe,OAAOxE,KAAKyC,SAEtBzC,KAAKqC,eAAeoC,QACpBzE,KAAKqC,eAAeK,OAAS,SAACC,GAA6B,OAAK,EAAKD,OAAOC,EAAK,EACjF3C,KAAKqC,eAAea,UAAY,SAACC,EAAWC,GAAS,OAAK,EAAKF,UAAUC,EAAGC,EAAG,EAC/EpD,KAAKqC,eAAegB,QAAU,SAACF,EAAWC,GAAS,OAAK,EAAKC,QAAQF,EAAGC,EAAG,CAC/E,CA+DD,OA/DE,+BAmBD,SAAelD,GACX,IACe,EADTwE,EAAK,GAAG,UACAxE,GAAC,IAAf,2BAAiB,CAAC,IAATmB,EAAC,QAASqD,EAAGjD,KAAK,IAAIkD,EAAAA,QAAQtD,EAAE,GAAIA,EAAE,GAAI,GAAK,CACxD,+BACA,IAAMuD,EAAgBC,EAAmBH,GAEnCI,GAAuBC,EAAAA,EAAAA,sBAAqBH,EAAe,KACjEhF,QAAQC,IAAIiF,GAIZlF,QAAQC,IAAI,qCACZ,IAAMmF,EAAsBhF,KAAKsC,aAAa2C,4BAA4BH,GAC1ElF,QAAQsF,MAAM,iBAAD,OAAkBF,EAAmB,kBAAkB,qCACpE,MAAoChF,KAAKsC,aAAa6C,6BAA6BL,GAAqB,eAAjGM,EAAgB,KAAErE,EAAO,KAUhC,OATAnB,QAAQsF,MAAM,iBAAD,OAAkBE,EAAgB,kBAAkB,qCAGjEpF,KAAKqF,kBAAkBtE,GAMhBqE,CAIX,GAAC,+BACD,SAA0BrE,GAExB,IADA,IAAIQ,EAAI,6CACCF,EAAI,EAAGA,EAAIN,EAAQgB,SAAUV,EAClCE,GAAI,cAAWR,EAAQM,GAAE,QAE7BrB,KAAKyC,QAAQ6C,UAAY/D,CAC7B,GAAC,qBACC,WACE,IACI,UAAwBxB,IAAjBC,KAAKwC,cAA2DzC,IAAlCC,KAAKwC,QAAQ+C,kBAC9CvF,KAAKwC,QAAQgD,YAAYxF,KAAKwC,QAAQ+C,iBAI9C,CAFE,MAAO/E,GAET,CACJ,KAAC,EApGyB,GAuGtBqE,EAAqB,SAACH,GAExB,IADA,IAAIe,EAAgB,GACXpE,EAAI,EAAGA,EAAIqD,EAAG3C,SAAUV,EAC/B,GAAIA,EAAIqD,EAAG3C,OAAS,EAAG,CACrB,IAAI2D,EAAK,IAAIf,EAAAA,QAAQD,EAAGrD,GAAG8B,EAAGuB,EAAGrD,GAAG+B,EAAGsB,EAAGrD,GAAGsE,GACzCC,EAAK,IAAIjB,EAAAA,QAAQD,EAAGrD,EAAI,GAAG8B,EAAGuB,EAAGrD,EAAI,GAAG+B,EAAGsB,EAAGrD,EAAI,GAAGsE,GAEzDC,EAAGzC,GAAKuC,EAAGvC,EACXyC,EAAGxC,GAAKsC,EAAGtC,EACXwC,EAAGD,GAAKD,EAAGC,EAEX,IAAIE,GAAMC,EAAAA,EAAAA,YAAW,IAAInB,EAAAA,QAAQ,EAAG,EAAG,IAAIoB,EAAAA,EAAAA,WAAUH,IACjDI,OAAOC,MAAMJ,GACfJ,EAAIhE,KAAKgE,EAAIA,EAAI1D,OAAS,IAE1B0D,EAAIhE,KAAKoE,EAGb,KAAO,CACL,IAAIH,EAAK,IAAIf,EAAAA,QAAQD,EAAGrD,GAAG8B,EAAGuB,EAAGrD,GAAG+B,EAAGsB,EAAGrD,GAAGsE,GACzCC,EAAK,IAAIjB,EAAAA,QAAQD,EAAG,GAAGvB,EAAGuB,EAAG,GAAGtB,EAAGsB,EAAG,GAAGiB,GAE7CC,EAAGzC,GAAKuC,EAAGvC,EACXyC,EAAGxC,GAAKsC,EAAGtC,EACXwC,EAAGD,GAAKD,EAAGC,EAEX,IAAIE,GAAMC,EAAAA,EAAAA,YAAW,IAAInB,EAAAA,QAAQ,EAAG,EAAG,IAAIoB,EAAAA,EAAAA,WAAUH,IACjDI,OAAOC,MAAMJ,GACfJ,EAAIhE,KAAKgE,EAAIA,EAAI1D,OAAS,IAE1B0D,EAAIhE,KAAKoE,EAEb,CAEF,OAAOJ,CACX,C","sources":["PART_06_Problem_Data_Model_Train_Validation/LAB_03_SmartDrawing/src/Core/SmartDrawing.ts","PART_06_Problem_Data_Model_Train_Validation/LAB_03_SmartDrawing/src/App.ts"],"sourcesContent":["import { tensor2d, tidy, Tensor2D, loadLayersModel } from '@tensorflow/tfjs';\r\nimport * as tf from '@tensorflow/tfjs';\r\n// import { NVector3 } from '../../Lib/NVector3';\r\n\r\nexport class SmartDrawing {\r\n    static CLASS_TYPE = {\r\n        0: 'CIRCLE',\r\n        1: 'TRI-GON',\r\n        2: 'ARROW_SINGLE',\r\n        3: 'ARROW_DOUBLE',\r\n        4: 'RECTANGLE',\r\n        5: 'TEXT',\r\n        6: 'CURVE',\r\n        7: 'HEART',\r\n        8: 'CLOUD'\r\n    };\r\n\r\n    modelLogisticRegression: tf.LayersModel\r\n    modelMultiClassification: tf.LayersModel\r\n    isLoaded: boolean = false;\r\n    constructor() {\r\n        LoadModelFromPublic().then( (models) =>{\r\n            [ this.modelLogisticRegression, this.modelMultiClassification ]= models;\r\n            this.isLoaded = true;\r\n            console.log(this);\r\n        });\r\n        console.log('executing Smart Drawing example');\r\n    }\r\n    public predictByLogisticRegression(data: number[]) {\r\n        if (this.modelLogisticRegression === undefined) { console.error('no model loaded'); return; }\r\n        console.log('==============================');\r\n        return tidy(() => {\r\n            const d = tensor2d([data]);\r\n            const predictOut = this.modelLogisticRegression.predict(d) as Tensor2D;\r\n            const score = predictOut.dataSync();\r\n            return this.PredictionPostProcessingLogisticRegression(score[0]);\r\n        });\r\n    }\r\n    private PredictionPostProcessingLogisticRegression(d: number) {\r\n        const result = Math.floor(d + 0.5);\r\n        return SmartDrawing.CLASS_TYPE[result];\r\n    }\r\n    public predictByMultiClassification(data: number[]) {\r\n        if (this.modelMultiClassification === undefined) { console.error('no model loaded'); return; }\r\n        return tidy(() => {\r\n            // console.log(data);\r\n            const d = tf.tensor2d([data]);\r\n            // console.log(d.toFloat());\r\n            const predictOut = this.modelMultiClassification.predict(d) as Tensor2D;\r\n            // console.log(predictOut);\r\n            // console.log(predictOut.toString());\r\n            // console.log('lllllllllllllllll');\r\n            const rankings = true;\r\n            const outText: string[] = [];\r\n            if (rankings) {\r\n                const logits = Array.from(predictOut.dataSync());\r\n                const rankingIndex = getIndexBySortDescending(logits as number[]);\r\n                // console.log(logits);\r\n                // console.log(rankingIndex);\r\n                // console.log('#####################');\r\n                for (let i of rankingIndex) {\r\n                    const probability: number = logits[i] as number;\r\n                    const text = 'class:' + SmartDrawing.CLASS_TYPE[i] + ', probability:' + probability.toFixed(5);\r\n                    console.log(text);\r\n                    outText.push(text);\r\n                }\r\n            }\r\n\r\n            const winner = predictOut.argMax(-1).dataSync()[0];\r\n            return [SmartDrawing.CLASS_TYPE[winner], outText];\r\n            // console.log(this.classStringsMultiClassification[winner]);\r\n            // return this.PredictionPostProcessingLogisticRegression(scoreArray[0]);\r\n        });\r\n    }\r\n}\r\n\r\nconst LoadModelFromPublic = async () => {\r\n    // http://www.njstudio.co.kr/ml/sm/modelLogisticRegression0/model.json\r\n    // let file = 'ML/SmartDrawing/modelLogisticRegression0/model.json';\r\n    let file = `https://raw.githubusercontent.com/NamjuLee/data/master/smart-drawing/model/modelLogisticRegression0/model.json`;\r\n    // let file = 'ML/SmartDrawing/new/model.json';\r\n    const modelLogisticRegression = await loadLayersModel(file);\r\n\r\n    file = `https://raw.githubusercontent.com/NamjuLee/data/master/smart-drawing/model/modelMultiClassification0/model.json`;\r\n    const modelMultiClassification = await loadLayersModel(file);\r\n    return [modelLogisticRegression , modelMultiClassification]\r\n};\r\nconst getIndexBySortDescending = (d: number[]) => {\r\n    const indices = new Array(d.length);\r\n    for (let i = 0; i < d.length; ++i) { indices[i] = i; }\r\n    indices.sort((a, b) => { return d[a] > d[b] ? -1 : d[a] < d[b] ? 1 : 0; });\r\n    return indices;\r\n}","import { SmartDrawing } from './Core/SmartDrawing';\r\nimport { Vector3, dotProduct, normalize, RendererCanvas, getInterpolatedArray  } from 'njscore'\r\n\r\nexport class AppSmartDrawing {\r\n    rendererCanvas: RendererCanvas;\r\n    smartDrawing: SmartDrawing;\r\n\r\n    vec: number[][] = [];\r\n    divHost: HTMLDivElement;\r\n    divText: HTMLDivElement;\r\n    constructor(id: string) {\r\n        this.divHost = document.getElementById(id) as HTMLDivElement;\r\n\r\n        const container = document.createElement('div');\r\n        this.divHost.appendChild(container);\r\n        container.id = 'container-video'\r\n        container.style.alignItems = 'center';\r\n        container.style.marginTop = '80px';\r\n        container.style.marginLeft = 'auto';\r\n        container.style.marginRight = 'auto';\r\n        container.style.width = '300px';\r\n        container.style.height = '400px';\r\n\r\n\r\n        this.smartDrawing = new SmartDrawing()\r\n        this.rendererCanvas = new RendererCanvas(container);\r\n        this.rendererCanvas.canvas.style.position = 'unset';\r\n\r\n        this.rendererCanvas.canvas.width = 300;\r\n        this.rendererCanvas.canvas.height = 300;\r\n        this.rendererCanvas.canvas.style.background = '#999';\r\n\r\n        this.divText = document.createElement('div');\r\n        this.divText.textContent = '*** FROM DEEP LEARNING MODEL B ***';\r\n        container.append(this.divText);\r\n\r\n        this.rendererCanvas.start();\r\n        this.rendererCanvas.render = (ctx: CanvasRenderingContext2D) => this.render(ctx);\r\n        this.rendererCanvas.mouseDrag = (x: number, y: number) => this.mouseDrag(x, y);\r\n        this.rendererCanvas.mouseUp = (x: number, y: number) => this.mouseUp(x, y);\r\n    }\r\n    public render = (ctx: CanvasRenderingContext2D) => {\r\n      // console.log(this.vec)\r\n        for(let i = 0; i < this.vec.length; ++i) {\r\n            ctx.fillStyle = 'rgba(255, 0, 0, 0.15)';\r\n            ctx.beginPath();\r\n            ctx.arc(this.vec[i][0], this.vec[i][1], 5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n    }\r\n    public mouseDrag = (x: number, y: number) => {\r\n        // console.log(x, y, this);\r\n        this.vec.push([x, y])\r\n    }\r\n    public mouseUp = (x: number, y: number) => {\r\n       this.Predict(this.vec);\r\n       this.vec = [];\r\n    }\r\n    public Predict(d: number[][]) {\r\n        const vs = [];\r\n        for (let i of d) { vs.push(new Vector3(i[0], i[1], 0)); }\r\n        // console.log(vs);\r\n        const dotPrediction = computeDotProducts(vs);\r\n        // console.log(dotPrediction);\r\n        const dotValueInterpolated = getInterpolatedArray(dotPrediction, 501);\r\n        console.log(dotValueInterpolated);\r\n        // const dotValueInterpolated = dotPrediction\r\n        // console.log(this.GetInterpolatedArray(dotPrediction, 10));\r\n        // console.log(this.scene.annotationInstance.implementation.app.model.appAnnotation.addon.smartDrawing);\r\n        console.log('*** FROM DEEP LEARNING MODELS ***');\r\n        const predictionLosisticR = this.smartDrawing.predictByLogisticRegression(dotValueInterpolated);\r\n        console.debug(`pridiction:%c ${predictionLosisticR} from LR Model`, 'background: #ddb137; color: black');\r\n        const [predictionMultiC, outText] = this.smartDrawing.predictByMultiClassification(dotValueInterpolated);\r\n        console.debug(`pridiction:%c ${predictionMultiC} from MC model`, 'background: #4e2c7e; color: white');\r\n\r\n        // console.log(d, predictionMultiC);\r\n        this.updateDivWithText(outText);\r\n        // this.firebaseWrapper.sendData({\r\n        //     class: predictionMultiC,\r\n        //     vec: d\r\n        // });\r\n\r\n        return predictionMultiC;\r\n\r\n        // console.log(prediction);\r\n        // this.GetShapeFromPrediction(prediction, vs);\r\n    }\r\n    private updateDivWithText(outText: string[]) {\r\n      let text = `<p>*** FROM DEEP LEARNING MODEL B *** </p>`;\r\n      for (let i = 0; i < outText.length; ++i) {\r\n          text += `<p> ${outText[i]}</p>`;\r\n      }\r\n      this.divText.innerHTML = text;\r\n  }\r\n    public destroy() {\r\n      try {\r\n          while (this.divHost !== undefined && this.divHost.lastElementChild !== undefined) {\r\n              this.divHost.removeChild(this.divHost.lastElementChild);\r\n          }\r\n      } catch (error) {\r\n          \r\n      }\r\n  }\r\n}\r\n\r\nconst computeDotProducts = (vs: Vector3[]) => {\r\n    let out: number[] = [];\r\n    for (let i = 0; i < vs.length; ++i) {\r\n      if (i < vs.length - 1) {\r\n        let v0 = new Vector3(vs[i].x, vs[i].y, vs[i].z);\r\n        let v1 = new Vector3(vs[i + 1].x, vs[i + 1].y, vs[i + 1].z);\r\n\r\n        v1.x -= v0.x;\r\n        v1.y -= v0.y;\r\n        v1.z -= v0.z;\r\n\r\n        let dot = dotProduct(new Vector3(1, 0, 0), normalize(v1));\r\n        if (Number.isNaN(dot)) {\r\n          out.push(out[out.length - 1]);\r\n        } else {\r\n          out.push(dot);\r\n        }\r\n\r\n      } else {\r\n        let v0 = new Vector3(vs[i].x, vs[i].y, vs[i].z);\r\n        let v1 = new Vector3(vs[0].x, vs[0].y, vs[0].z);\r\n\r\n        v1.x -= v0.x;\r\n        v1.y -= v0.y;\r\n        v1.z -= v0.z;\r\n\r\n        let dot = dotProduct(new Vector3(1, 0, 0), normalize(v1));\r\n        if (Number.isNaN(dot)) {\r\n          out.push(out[out.length - 1]);\r\n        } else {\r\n          out.push(dot);\r\n        }\r\n      }\r\n    }\r\n    return out;\r\n}\r\n"],"names":["SmartDrawing","modelLogisticRegression","modelMultiClassification","isLoaded","LoadModelFromPublic","then","models","console","log","data","undefined","this","tidy","d","tensor2d","score","predict","dataSync","PredictionPostProcessingLogisticRegression","error","result","Math","floor","CLASS_TYPE","tf","predictOut","outText","logits","Array","from","rankingIndex","getIndexBySortDescending","i","probability","text","toFixed","push","winner","argMax","file","loadLayersModel","indices","length","sort","a","b","AppSmartDrawing","id","rendererCanvas","smartDrawing","vec","divHost","divText","render","ctx","fillStyle","beginPath","arc","PI","closePath","fill","mouseDrag","x","y","mouseUp","Predict","document","getElementById","container","createElement","appendChild","style","alignItems","marginTop","marginLeft","marginRight","width","height","RendererCanvas","canvas","position","background","textContent","append","start","vs","Vector3","dotPrediction","computeDotProducts","dotValueInterpolated","getInterpolatedArray","predictionLosisticR","predictByLogisticRegression","debug","predictByMultiClassification","predictionMultiC","updateDivWithText","innerHTML","lastElementChild","removeChild","out","v0","z","v1","dot","dotProduct","normalize","Number","isNaN"],"sourceRoot":""}