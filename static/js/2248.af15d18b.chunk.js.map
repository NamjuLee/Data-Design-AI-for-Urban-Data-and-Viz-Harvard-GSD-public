{"version":3,"file":"static/js/2248.af15d18b.chunk.js","mappings":"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","sources":["PART_10_Web_Visualization_Digital_Mapping_Analysis/DynamicBins/index.ts"],"sourcesContent":["import { RendererJSAPI } from '../../lib'\r\nimport { getCSVFromURL, Vector3, isInsideOfVecs } from 'njscore';\r\n\r\nexport class Solution extends RendererJSAPI {\r\n    pts: Vector3[] = [];\r\n\r\n    captureVec: Vector3\r\n\r\n    pixelMap: CustomDynamicBinSystem;\r\n\r\n    divText: HTMLDivElement;\r\n\r\n    constructor(view: any) {\r\n        super(view);\r\n        // TODO\r\n        // You code goes here for one time operation\r\n\r\n        this.center(-71.08759760905814, 42.326218799267316);\r\n        this.zoom(12);\r\n\r\n        // https://developers.arcgis.com/javascript/latest/api-reference/esri-views-MapView.html#navigation\r\n        this.mView.navigation = {\r\n            gamepad: {\r\n                enabled: false\r\n            },\r\n            mouseWheelZoomEnabled: false\r\n        }\r\n        this.disablePan = true;\r\n\r\n        // append UI\r\n        const div = document.createElement('div');\r\n        div.style.position = 'absolute';\r\n        div.style.margin = '20px';\r\n        this.hostDiv.appendChild(div);\r\n\r\n        let slider = getSlider('Type', '0', '5');\r\n        slider.slider.defaultValue = '0';\r\n        // slider.div.style.position = 'absolute';\r\n        slider.div.style.marginTop = '25px';\r\n        slider.text.textContent = 'Type';\r\n        div.appendChild(slider.div);\r\n        slider.slider.oninput = () => {\r\n            this.pixelMap.mode = +slider.slider.value;\r\n            this.pixelMap.Init();\r\n            this.pixelMap.UpdateData(this.pts);\r\n        }\r\n\r\n        this.divText = document.createElement('div');\r\n        this.divText.style.color = '#0ff';\r\n        this.divText.style.marginTop = '22px';\r\n        this.divText.style.fontSize = '18px';\r\n        this.divText.textContent = 'Num of data:';\r\n        div.appendChild(this.divText);\r\n        // end append UI\r\n\r\n        // https://data.boston.gov/dataset/blue-bike-stations\r\n        getCSVFromURL(process.env.PUBLIC_URL + '/static/data/Primary_Street_Trees_Public.csv').then((d) => {\r\n            const line = d.split(/\\r\\n|\\r|\\n/g);\r\n            for (let i = 1; i < line.length; ++i) {\r\n                const values = line[i].split(',');\r\n                const lon = +values[13];\r\n                const lat = +values[14];\r\n                if ((!isNaN(lon) && !isNaN(lat) && ((lon !== 0) && (lat !== 0)))) {\r\n                    const projected = this.toScreen(lon, lat);\r\n                    this.pts.push(new Vector3(projected[0], projected[1], 0));\r\n                }\r\n                if (i > 1000) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.pixelMap = new CustomDynamicBinSystem(\r\n                new Vector3(200, 200, 0),\r\n                new Vector3(900, 900, 0),\r\n            );\r\n            this.pixelMap.mode = 0;\r\n            this.pixelMap.Init();\r\n            this.pixelMap.UpdateData(this.pts);\r\n\r\n            this.start();\r\n        });\r\n\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n        // TODO\r\n        // You code goes here for the rending loop\r\n\r\n        ctx.globalCompositeOperation = 'color-dodge';\r\n        this.pts.forEach((p) => {\r\n            renderPoint(ctx, p.x, p.y, this.time + 3, 'rgba(10, 255, 10, 0.2)');\r\n        });\r\n\r\n        this.pixelMap.RenderPixel(ctx);\r\n        this.pixelMap.RenderCorner(ctx);\r\n\r\n        ctx.globalCompositeOperation = 'source-over';\r\n        this.pixelMap.RenderSelPixel(ctx);\r\n\r\n        // !! can stop render after this frame.\r\n        // this.isStatic = true;\r\n    }\r\n    public mouseDown(x: number, y: number): void {\r\n        this.captureVec = this.pixelMap.IsHover(x, y);\r\n    }\r\n    public mouseMove(x: number, y: number): void {\r\n\r\n        if (this.pixelMap) {\r\n            this.pixelMap.MoveInspection(x, y);\r\n            if (this.pixelMap.selPixel) {\r\n                const d = this.pixelMap.selPixel.vec.z\r\n                const text = 'Num of data: ' + d + ', index:' + this.pixelMap.selPixel.i + ',' + this.pixelMap.selPixel.j;\r\n                this.divText.textContent = text;\r\n                return;\r\n            }\r\n        }\r\n\r\n    }\r\n    public mouseDrag(x: number, y: number): void {\r\n\r\n        if (this.captureVec) {\r\n            this.pixelMap.DragControlPoint(x, y);\r\n            this.pixelMap.UpdateData(this.pts);\r\n        }\r\n    }\r\n    public mouseUp(x: number, y: number): void {\r\n        this.captureVec = undefined;\r\n    }\r\n}\r\nconst renderPoint = (ctx: CanvasRenderingContext2D, x: number, y: number, t: number, color: string) => {\r\n    ctx.fillStyle = color;\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, (Math.sin(t * 0.8) + 6) * 2, 0, Math.PI * 2);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n};\r\n\r\n\r\n\r\nexport class CustomDynamicBinSystem {\r\n    v0: Vector3;\r\n    v1: Vector3;\r\n    rx: number;\r\n    ry: number;\r\n    ddx: number;\r\n    ddy: number;\r\n    pts: Vector3[][] = [];\r\n    ptList: Vector3[] = [];\r\n    listPixels: Pixel[] = [];\r\n    m: Vector3;\r\n    t: number = 0.0;\r\n    mode: number = 0;\r\n    selPixel: Pixel | undefined = undefined;\r\n    constructor(v0: Vector3, v1: Vector3) {\r\n        this.v0 = v0;\r\n        this.v1 = v1;\r\n        this.rx = 10;\r\n        this.ry = 10;\r\n        this.ddx = 0.0;\r\n        this.ddy = 0.0;\r\n        this.m = new Vector3(0, 0);\r\n        this.Init();\r\n    }\r\n    public IsHover(x: number, y: number) {\r\n        this.m.x = x; this.m.y = y;\r\n        let p = this.pts[0][0];\r\n        if (Vector3.distanceTo(this.m, p) < 8) { return p; }\r\n        p = this.pts[0][this.pts[0].length - 1];\r\n        if (Vector3.distanceTo(this.m, p) < 8) { return p; }\r\n        p = this.pts[this.pts.length - 1][this.pts[0].length - 1];\r\n        if (Vector3.distanceTo(this.m, p) < 8) { return p; }\r\n        p = this.pts[this.pts.length - 1][0];\r\n        if (Vector3.distanceTo(this.m, p) < 8) { return p; }\r\n        return undefined;\r\n    }\r\n    public Move(x: number, y: number) {\r\n        this.MoveInspection(x, y);\r\n    }\r\n    public MoveInspection(x: number, y: number) {\r\n        this.m.x = x;\r\n        this.m.y = y;\r\n        for (let j = 0; j < this.listPixels.length; ++j) {\r\n            // console.log('ddd');\r\n            if (isInsideOfVecs(this.m, this.listPixels[j].recVec)) {\r\n                this.selPixel = this.listPixels[j];\r\n                return;\r\n            } else {\r\n                this.selPixel = undefined;\r\n                // console.log('out');\r\n            }\r\n        }\r\n    }\r\n    public DragControlPoint(x: number, y: number) {\r\n        this.m.x = x; this.m.y = y;\r\n        let p = this.pts[0][0];\r\n        if (Vector3.distanceTo(this.m, p) < 60) {\r\n            this.v0.x = x;\r\n            this.v0.y = y;\r\n        }\r\n        p = this.pts[0][this.pts[0].length - 1];\r\n        if (Vector3.distanceTo(this.m, p) < 60) {\r\n            this.v1.x = x;\r\n            this.v0.y = y;\r\n        }\r\n        p = this.pts[this.pts.length - 1][this.pts[0].length - 1];\r\n        if (Vector3.distanceTo(this.m, p) < 60) {\r\n            this.v1.x = x;\r\n            this.v1.y = y;\r\n        }\r\n        p = this.pts[this.pts.length - 1][0];\r\n        if (Vector3.distanceTo(this.m, p) < 60) {\r\n            this.v0.x = x;\r\n            this.v1.y = y;\r\n        }\r\n        this.Init();\r\n    }\r\n    public Init() {\r\n        this.ddx = (this.v1.x - this.v0.x) / (this.rx - 1.0);\r\n        this.ddy = (this.v1.y - this.v0.y) / (this.ry - 1.0);\r\n        // console.log('ddx is ' + this.ddx + '. ddy is ' + this.ddx);\r\n        // console.log('Pixe Map was executed...');\r\n        this.pts = [];\r\n        this.ptList = [];\r\n        this.listPixels = [];\r\n\r\n        this.InitGrid();\r\n\r\n        switch (this.mode) {\r\n            case 0: this.ComputeRec(); break;\r\n            case 1: this.ComputeTriA(); break;\r\n            case 2: this.ComputeTriB(); break;\r\n            case 3: this.ComputeDia(); break;\r\n            case 4: this.ComputeLShape(); break;\r\n            default: this.ComputeHex(); break;\r\n        }\r\n\r\n    }\r\n    public UpdateData(vs: Vector3[]) {\r\n        for (let j = 0; j < this.listPixels.length; ++j) {\r\n            this.listPixels[j].data['num'] = 0;\r\n        }\r\n        for (let i = 0; i < vs.length; ++i) {\r\n            const p = vs[i];\r\n            for (let j = 0; j < this.listPixels.length; ++j) {\r\n                if (isInsideOfVecs(p, this.listPixels[j].recVec)) {\r\n                    // console.log('ddd');\r\n                    this.listPixels[j].vec.z += 1\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public InitGrid() {\r\n        this.pts = [];\r\n        for (let j = 0; j < this.ry; ++j) {\r\n            let y = this.v0.y + j * this.ddy;\r\n            let xArray: Vector3[] = [];\r\n            for (let i = 0; i < this.rx; ++i) {\r\n                let x = this.v0.x + i * this.ddx;\r\n                const v = new Vector3(x, y, 0);\r\n                xArray.push(v);\r\n                this.ptList.push(v);\r\n            }\r\n            this.pts.push(xArray);\r\n        }\r\n    }\r\n    public ComputeRec() {\r\n        this.listPixels = [];\r\n        for (let j = 0; j < this.ry; j += 1) {\r\n            for (let i = 0; i < this.rx; i += 1) {\r\n                if (i < this.rx - 1 && j < this.ry - 1) {\r\n                    let p = new Pixel(this, i, j);\r\n                    p.recVec.push(this.pts[j][i]);\r\n                    p.recVec.push(this.pts[j][i + 1]);\r\n                    p.recVec.push(this.pts[j + 1][i + 1]);\r\n                    p.recVec.push(this.pts[j + 1][i]);\r\n                    this.listPixels.push(p);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public ComputeTriA() {\r\n        this.listPixels = [];\r\n        for (let j = 0; j < this.ry; j += 1) {\r\n            for (let i = 0; i < this.rx; i += 1) {\r\n                if (i < this.rx - 1 && j < this.ry - 1) {\r\n                    let p = new Pixel(this, i, j);\r\n                    p.recVec.push(this.pts[j][i]);\r\n                    p.recVec.push(this.pts[j][i + 1]);\r\n                    p.recVec.push(this.pts[j + 1][i]);\r\n                    this.listPixels.push(p);\r\n\r\n                    p = new Pixel(this, i, j);\r\n                    p.recVec.push(this.pts[j][i + 1]);\r\n                    p.recVec.push(this.pts[j + 1][i + 1]);\r\n                    p.recVec.push(this.pts[j + 1][i]);\r\n                    this.listPixels.push(p);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public ComputeDia() {\r\n        this.listPixels = [];\r\n        for (let j = 0; j < this.ry; j += 1) {\r\n            for (let i = 0; i < this.rx; i += 1) {\r\n                if (i < this.rx - 2 && j < this.ry - 1) {\r\n                    let p = new Pixel(this, i, j);\r\n                    p.recVec.push(this.pts[j][i]);\r\n                    p.recVec.push(this.pts[j][i + 1]);\r\n                    p.recVec.push(this.pts[j + 1][i + 2]);\r\n                    p.recVec.push(this.pts[j + 1][i + 1]);\r\n\r\n                    this.listPixels.push(p);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public ComputeLShape() {\r\n        this.listPixels = [];\r\n        for (let j = 0; j < this.ry; j += 3) {\r\n            for (let i = 0; i < this.rx; i += 2) {\r\n                if (i < this.rx - 2 && j < this.ry - 2) {\r\n                    let p = new Pixel(this, i, j);\r\n                    p.recVec.push(this.pts[j][i]);\r\n                    p.recVec.push(this.pts[j][i + 2]);\r\n                    p.recVec.push(this.pts[j + 1][i + 2]);\r\n                    p.recVec.push(this.pts[j + 1][i + 1]);\r\n                    p.recVec.push(this.pts[j + 2][i + 1]);\r\n                    p.recVec.push(this.pts[j + 2][i]);\r\n                    this.listPixels.push(p);\r\n\r\n                    p = new Pixel(this, i, j);\r\n                    p.recVec.push(this.pts[j + 2][i]);\r\n                    p.recVec.push(this.pts[j + 3][i]);\r\n                    p.recVec.push(this.pts[j + 3][i + 2]);\r\n                    p.recVec.push(this.pts[j + 1][i + 2]);\r\n                    p.recVec.push(this.pts[j + 1][i + 1]);\r\n                    p.recVec.push(this.pts[j + 2][i + 1]);\r\n                    // p.recVec.push(this.pts[j + 1][i + 2]);\r\n                    // p.recVec.push(this.pts[j + 1][i + 1]);\r\n                    // p.recVec.push(this.pts[j + 2][i + 1]);\r\n                    // p.recVec.push(this.pts[j + 2][i]);\r\n                    this.listPixels.push(p);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public ComputeTriB() {\r\n        this.listPixels = [];\r\n        for (let j = 0; j < this.ry; j += 1) {\r\n            for (let i = 0; i < this.rx; i += 1) {\r\n                if (i < this.rx - 1 && j < this.ry - 1) {\r\n                    let p = new Pixel(this, i, j);\r\n                    p.recVec.push(this.pts[j][i]);\r\n                    p.recVec.push(this.pts[j][i + 1]);\r\n                    p.recVec.push(this.pts[j + 1][i + 1]);\r\n                    this.listPixels.push(p);\r\n\r\n                    p = new Pixel(this, i, j);\r\n                    p.recVec.push(this.pts[j][i]);\r\n                    p.recVec.push(this.pts[j + 1][i + 1]);\r\n                    p.recVec.push(this.pts[j + 1][i]);\r\n                    this.listPixels.push(p);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public ComputeHex() {\r\n        this.listPixels = [];\r\n        let alter = true;\r\n        for (let j = 0; j < this.ry; j += 2) {\r\n            for (let i = 0; i < this.rx; i += 2) {\r\n                if (alter) {\r\n                    if (i % 2 === 0 && i < this.rx - 2 && j % 2 === 0 && j < this.ry - 2) {\r\n                        let p = new Pixel(this, i, j);\r\n                        p.recVec.push(this.pts[j][i + 1]);\r\n                        p.recVec.push(this.pts[j + 1][i + 2]);\r\n                        p.recVec.push(this.pts[j + 2][i + 2]);\r\n                        p.recVec.push(this.pts[j + 3][i + 1]);\r\n                        p.recVec.push(this.pts[j + 2][i]);\r\n                        p.recVec.push(this.pts[j + 1][i]);\r\n                        // p.recVec.push(this.pts[j][i+1]);\r\n                        this.listPixels.push(p);\r\n                    }\r\n                } else {\r\n                    if (i % 2 === 0 && i < this.rx - 2 && j % 2 === 0 && j < this.ry - 2) {\r\n                        let p = new Pixel(this, i, j);\r\n                        p.recVec.push(this.pts[j][i + 2]);\r\n                        p.recVec.push(this.pts[j + 1][i + 3]);\r\n                        p.recVec.push(this.pts[j + 2][i + 3]);\r\n                        p.recVec.push(this.pts[j + 3][i + 2]);\r\n                        p.recVec.push(this.pts[j + 2][i + 1]);\r\n                        p.recVec.push(this.pts[j + 1][i + 1]);\r\n                        // p.vecs.push(this.pts[j][i+2]);\r\n                        this.listPixels.push(p);\r\n                    }\r\n                }\r\n            }\r\n            alter = !alter;\r\n        }\r\n        // console.log('done for grid');\r\n        // this.InitGridNeighbor();\r\n    }\r\n    RenderPixel(ctx: CanvasRenderingContext2D) {\r\n        for (let i = 0; i < this.listPixels.length; ++i) {\r\n            this.listPixels[i].Render(ctx);\r\n        }\r\n    }\r\n    RenderCorner(ctx: CanvasRenderingContext2D) {\r\n        let p = this.pts[0][0];\r\n        CanvasDrawing.PointByNVecAni(ctx, p, 7, this.t, 'rgba(0, 0, 0, 1)');\r\n        ctx.stroke();\r\n        p = this.pts[0][this.pts[0].length - 1];\r\n        CanvasDrawing.PointByNVecAni(ctx, p, 7, this.t, 'rgba(0, 0, 0, 1)');\r\n        ctx.stroke();\r\n        p = this.pts[this.pts.length - 1][this.pts[0].length - 1];\r\n        CanvasDrawing.PointByNVecAni(ctx, p, 7, this.t, 'rgba(0, 0, 0, 1)');\r\n        ctx.stroke();\r\n        p = this.pts[this.pts.length - 1][0];\r\n        CanvasDrawing.PointByNVecAni(ctx, p, 7, this.t, 'rgba(0, 0, 0, 1)');\r\n        ctx.stroke();\r\n        this.t += 0.07;\r\n    }\r\n    public RenderSelPixel(ctx: CanvasRenderingContext2D) {\r\n        if (this.selPixel) {\r\n            ctx.lineWidth = 3;\r\n            ctx.strokeStyle = '#ffffff';\r\n            // ctx.fillStyle = `rgba(255, 0, 255, ${this.data['num'] * 0.05} )`;\r\n            ctx.beginPath();\r\n            ctx.moveTo(this.selPixel.recVec[0].x, this.selPixel.recVec[0].y);\r\n            for (let i = 1; i < this.selPixel.recVec.length; ++i) {\r\n                ctx.lineTo(this.selPixel.recVec[i].x, this.selPixel.recVec[i].y);\r\n            }\r\n            ctx.closePath();\r\n\r\n            ctx.stroke();\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class Pixel {\r\n    static ID = 0;\r\n\r\n    map: CustomDynamicBinSystem;\r\n    vec: Vector3;\r\n    norV: Vector3;\r\n    nPix: Pixel[] = [];\r\n    recVec: Vector3[];\r\n    i: number = -1;\r\n    j: number = -1;\r\n    k: number = -1;\r\n    u: number = -1;\r\n    v: number = -1;\r\n    id: number;\r\n    color: number[] = [];\r\n    data: {};\r\n\r\n    static GetID() { return Pixel.ID++; }\r\n\r\n    constructor(map: CustomDynamicBinSystem, i: number, j: number, v: Vector3 = new Vector3(0, 0, 0)) {\r\n        this.map = map;\r\n        this.vec = v;\r\n        this.nPix = [];\r\n        this.recVec = [];\r\n        this.i = i;\r\n        this.j = j;\r\n        this.k = -1;\r\n        this.id = Pixel.GetID();\r\n        this.data = {};\r\n    }\r\n    ToString() {\r\n        let temp = 'Pixel' + this.id;\r\n        // console.log(temp);\r\n        return temp;\r\n    }\r\n    Update() {\r\n        /* */\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        // console.log(this.data['num'])\r\n        ctx.lineWidth = 1;\r\n        ctx.strokeStyle = 'rgba(0, 0, 0, 0.3)';\r\n        ctx.fillStyle = `rgba(0, 255, 255, ${this.vec.z * 0.05} )`;\r\n        // ctx.fillStyle = `rgba(${this.vec.z}, 0, 0, ${this.vec.z * 0.05} )`;\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.recVec[0].x, this.recVec[0].y);\r\n        for (let i = 1; i < this.recVec.length; ++i) {\r\n            ctx.lineTo(this.recVec[i].x, this.recVec[i].y);\r\n        }\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n        ctx.fill();\r\n    }\r\n}\r\n\r\nexport class CanvasDrawing {\r\n    public static LineByVecs(ctx: CanvasRenderingContext2D, v0: Vector3, v1: Vector3, width: number = 1, fill: string = '#ff0000') {\r\n        ctx.strokeStyle = fill;\r\n        ctx.lineWidth = width;\r\n        ctx.beginPath();\r\n        ctx.moveTo(v0.x, v0.y);\r\n        ctx.lineTo(v1.x, v1.y);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n    }\r\n    public static Line(ctx: CanvasRenderingContext2D, x0: number, y0: number, x1: number, y1: number, width: number = 1, fill: string = '#ff0000') {\r\n        ctx.strokeStyle = fill;\r\n        ctx.lineWidth = width;\r\n        ctx.beginPath();\r\n        ctx.moveTo(x0, y0);\r\n        ctx.lineTo(x1, y1);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n    }\r\n    public static Point(ctx: CanvasRenderingContext2D, x: number, y: number, r: number = 5, fill: string = '#ff0000') {\r\n        ctx.fillStyle = fill;\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, r, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n    public static PointByNVec(ctx: CanvasRenderingContext2D, v: Vector3, r: number = 5, fill: string = '#ff0000') {\r\n        ctx.fillStyle = fill;\r\n        ctx.beginPath();\r\n        ctx.arc(v.x, v.y, r, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n    public static PointByNVecAni(ctx: CanvasRenderingContext2D, v: Vector3, r: number = 5, t: number, fill: string = '#ff0000') {\r\n        ctx.fillStyle = fill;\r\n        ctx.beginPath();\r\n        ctx.arc(v.x, v.y, r + (1 + Math.sin(t)) * 2, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n\r\n    // .....................................................\r\n    public static GridLineOrigin(ctx: CanvasRenderingContext2D, xNum: number = 10, yNum: number = 10, xOff: number = 20, yOff: number = 20) {\r\n        const xStart = - ((xNum * xOff) * 0.5);\r\n        const yStart = - ((yNum * yOff) * 0.5);\r\n\r\n        ctx.lineWidth = 0.1;\r\n\r\n        for (let y = 0; y <= yNum; ++y) {\r\n            // for (let x = 0; x <= xNum; ++x) {\r\n            //     ctx.beginPath();\r\n            //     ctx.arc(xStart + (xOff * x), yStart + (yOff * y), 1, 0, Math.PI * 2);\r\n            //     ctx.closePath();\r\n            //     ctx.fill();\r\n            // }\r\n            ctx.beginPath();\r\n            ctx.moveTo(xStart, yStart + (yOff * y));\r\n            ctx.lineTo((xNum * xOff) * 0.5, yStart + (yOff * y));\r\n            ctx.closePath();\r\n            ctx.stroke();\r\n\r\n            ctx.beginPath();\r\n            ctx.moveTo(xStart + (xOff * y), yStart);\r\n            ctx.lineTo(yStart + (yOff * y), (yNum * yOff) * 0.5);\r\n            ctx.closePath();\r\n            ctx.stroke();\r\n        }\r\n\r\n    }\r\n    public static GridPointOrigin(ctx: CanvasRenderingContext2D, xNum: number = 10, yNum: number = 10, xOff: number = 20, yOff: number = 20) {\r\n        const xStart = - ((xNum * xOff) * 0.5);\r\n        const yStart = - ((yNum * yOff) * 0.5);\r\n        // console.log(xStart, yStart);\r\n        ctx.lineWidth = 0.1;\r\n\r\n        for (let y = 0; y <= yNum; ++y) {\r\n            for (let x = 0; x <= xNum; ++x) {\r\n                ctx.beginPath();\r\n                ctx.arc(xStart + (xOff * x), yStart + (yOff * y), 1, 0, Math.PI * 2);\r\n                ctx.closePath();\r\n                ctx.fill();\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n}\r\nconst getSlider = (title: string, min: string = '0.0', max: string = '100') => {\r\n    // <input type=\"range\" min=\"1\" max=\"100\" value=\"50\" class=\"slider\" id=\"myRange\">\r\n    const div = document.createElement('div');\r\n    div.style.display = 'flex';\r\n\r\n    const slider = document.createElement('input');\r\n    slider.type = 'range';\r\n    slider.min = min;\r\n    slider.max = max;\r\n\r\n    const text = document.createElement('div');\r\n    text.textContent = title;\r\n    text.style.color = '#aaa';\r\n    div.appendChild(slider);\r\n    div.appendChild(text);\r\n\r\n    return {\r\n        div, slider, text\r\n    }\r\n};"],"names":["Solution","view","pts","captureVec","pixelMap","divText","center","zoom","mView","navigation","gamepad","enabled","mouseWheelZoomEnabled","disablePan","div","document","createElement","style","position","margin","hostDiv","appendChild","slider","getSlider","defaultValue","marginTop","text","textContent","oninput","mode","value","Init","UpdateData","color","fontSize","getCSVFromURL","process","then","d","line","split","i","length","values","lon","lat","isNaN","projected","toScreen","push","Vector3","CustomDynamicBinSystem","start","ctx","globalCompositeOperation","this","forEach","p","renderPoint","x","y","time","RenderPixel","RenderCorner","RenderSelPixel","IsHover","MoveInspection","selPixel","vec","z","j","DragControlPoint","undefined","RendererJSAPI","t","fillStyle","beginPath","arc","Math","sin","PI","closePath","fill","v0","v1","rx","ry","ddx","ddy","ptList","listPixels","m","isInsideOfVecs","recVec","InitGrid","ComputeRec","ComputeTriA","ComputeTriB","ComputeDia","ComputeLShape","ComputeHex","vs","data","xArray","v","Pixel","alter","Render","CanvasDrawing","PointByNVecAni","stroke","lineWidth","strokeStyle","moveTo","lineTo","map","norV","nPix","k","u","id","GetID","ID","width","x0","y0","x1","y1","r","xNum","yNum","xOff","yOff","xStart","yStart","title","min","max","display","type"],"sourceRoot":""}