{"version":3,"file":"static/js/9769.4f00d066.chunk.js","mappings":"qQAAaA,EAAQ,WACjB,WAAYC,IAAY,eACpBC,QAAQC,IAAI,kEACZD,QAAQC,IAAI,oCACZD,QAAQC,IAAI,qCAGZ,IAAMC,EAAY,EAAE,GAAI,EAAG,GACrBC,EAAY,CAAC,EAAG,EAAG,GAKnBC,GAAaD,EAAU,GAAKD,EAAU,IAAE,GACxCG,GAAaF,EAAU,GAAKD,EAAU,IAAE,GAE9CF,QAAQC,IAAI,YAAaG,EAAW,YAAaC,GAKjD,IAFA,IAAMC,EAA4B,GAC5BC,EAAmB,GAChBC,EAAI,EAAGA,EAVH,KAUeA,EAAG,CAI3B,IAHA,IAAMC,EAAOP,EAAU,GAAKM,EAAIH,EAE1BK,EAAiB,GACdC,EAAI,EAAGA,EAfP,KAemBA,EAAG,CAC3B,IAAMC,EAAOV,EAAU,GAAKS,EAAIP,EAChCM,EAAMG,KAAK,IAAIC,EAAMF,EAAMH,EAAM,GACrC,CACAF,EAAMM,KAAKH,EACf,CACAJ,EAAaO,KAAKN,GAElBP,QAAQC,IAAIK,EAChB,CAGC,OAHA,+BACD,WAEA,KAAC,EArCgB,GAuCfQ,GAAK,QAIP,WAAYH,EAAWH,EAAWO,IAAY,oBAHvCJ,OAAC,OACDH,OAAC,OACDO,OAAC,EAEJC,KAAKL,EAAIA,EACTK,KAAKR,EAAIA,EACTQ,KAAKD,EAAIA,CACb,G","sources":["PART_04_Geometry_Data/LAB_Web_09_Pixel/index.ts"],"sourcesContent":["export class Solution {\r\n    constructor(view: any) {\r\n        console.log(\"Let's learn Typescript for digital mapping and visualization!!\");\r\n        console.log(\"Typescript, Pixel data Structure\");\r\n        console.log(\"=================================\");\r\n\r\n        // a cube, 2 by 2\r\n        const minVector = [-1, -1, 0]\r\n        const maxVector = [1, 1, 2]\r\n\r\n        const xNum = 12;\r\n        const yNum = 12;\r\n\r\n        const xInterval = (maxVector[0] - minVector[0]) / (xNum - 1);\r\n        const yInterval = (maxVector[1] - minVector[1]) / (yNum - 1);\r\n\r\n        console.log('xInterval', xInterval, 'yInterval', yInterval)\r\n\r\n        // 2D data array\r\n        const listPixelMap: Pixel[][][] = [];\r\n        const yList: Pixel[][] = []\r\n        for (let y = 0; y < yNum; ++y) {\r\n            const theY = minVector[1] + y * yInterval;\r\n\r\n            const xList: Pixel[] = []\r\n            for (let x = 0; x < xNum; ++x) {\r\n                const theX = minVector[0] + x * xInterval;\r\n                xList.push(new Pixel(theX, theY, 0));\r\n            }\r\n            yList.push(xList);\r\n        }\r\n        listPixelMap.push(yList);\r\n\r\n        console.log(listPixelMap)\r\n    }\r\n    public destroy() {\r\n\r\n    }\r\n}\r\nclass Pixel {\r\n    public x;\r\n    public y;\r\n    public z;\r\n    constructor(x: number, y: number, z: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n}"],"names":["Solution","view","console","log","minVector","maxVector","xInterval","yInterval","listPixelMap","yList","y","theY","xList","x","theX","push","Pixel","z","this"],"sourceRoot":""}