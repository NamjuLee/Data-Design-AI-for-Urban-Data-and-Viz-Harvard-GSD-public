{"version":3,"file":"static/js/330.46b309c6.chunk.js","mappings":"gTAOaA,EAAQ,0CAMjB,WAAYC,GAAY,IAAD,mBACnB,cAAMA,IALVC,SAAwB,GAAG,EAC3BC,OAAmB,GAAG,EACtBC,QAAgB,GAOZ,EAAKC,MAAMC,GAAG,QAAQ,SAACC,GACnBA,EAAMC,iBACV,IACA,EAAKH,MAAMI,WAAWC,uBAAwB,EAG9C,EAAKC,QAAQ,UAAW,WACxB,EAAKC,KAAK,GAGV,IAAMC,EAASC,SAASC,cAAc,UAyCnC,OAxCHF,EAAOG,GAAK,QACZH,EAAOI,MAAQ,EAAKZ,MAAMa,UAAUC,YACpCN,EAAOO,OAAS,EAAKf,MAAMa,UAAUG,aACrCR,EAAOS,MAAMC,WAAY,sBACzBV,EAAOS,MAAME,SAAW,WACxBX,EAAOS,MAAMG,cAAgB,OAC7B,EAAKpB,MAAMa,UAAUQ,YAAYb,IAIjCc,EAAAA,EAAAA,gBAAwC,2CAA2CC,MAAK,SAACC,GAIrF,IAFA,IAAMC,EAAWD,EAAY,SAErBE,EAAI,EAAIA,EAAID,EAASE,SAAUD,EAAG,CACtC,IAAME,EAAWH,EAASC,GAAa,SAGvC,GAAwB,YAArBE,EAAe,KAAgB,CAG9B,IAAIC,EAAID,EAAsB,YAAE,GAAG,GAAG,GAClCE,EAAIF,EAAsB,YAAE,GAAG,GAAG,GAChCG,EAAU,GAChBA,EAAQC,KAAKH,EAAGC,GAEhB,IAAI,IAAIG,EAAI,EAAIA,EAAIL,EAAsB,YAAE,GAAGD,SAAUM,EACrDJ,EAAID,EAAsB,YAAE,GAAGK,GAAG,GAClCH,EAAIF,EAAsB,YAAE,GAAGK,GAAG,GAClCF,EAAQC,KAAKH,EAAGC,GAIpB,EAAKhC,OAAOkC,KAAK,mBAAD,OAAoC,GAAhBE,KAAKC,SAAiB,GAAG,MAC7D,EAAKtC,SAASmC,KAAKD,EAEvB,CACJ,CAEA,EAAKK,OACT,IAAG,CACP,CAiCC,OAjCA,8BACD,SAAOC,GAEH,IAAK,IAAIX,EAAI,EAAGA,EAAIY,KAAKzC,SAAS8B,SAAUD,EAAG,CAE3C,IAAIG,EAAIS,KAAKzC,SAAS6B,GAAG,GACrBI,EAAIQ,KAAKzC,SAAS6B,GAAG,GACrBa,EAAYD,KAAKE,SAASX,EAAGC,GAEjCO,EAAII,YACJJ,EAAIK,OAAOH,EAAU,GAAIA,EAAU,IAEnC,IAAK,IAAIN,EAAI,EAAGA,EAAIK,KAAKzC,SAAS6B,GAAGC,OAAQM,GAAK,EAC9CJ,EAAIS,KAAKzC,SAAS6B,GAAGO,GACrBH,EAAIQ,KAAKzC,SAAS6B,GAAGO,EAAE,GACvBM,EAAYD,KAAKE,SAASX,EAAGC,GAE7BO,EAAIM,OAAOJ,EAAU,GAAIA,EAAU,IAGvCF,EAAIO,YACJP,EAAIQ,UAAYP,KAAKxC,OAAO4B,GAE5BW,EAAIS,MAER,CACAC,QAAQC,IAAI,SACZV,KAAKW,UAAW,CACpB,GAAC,uBACD,SAAiBpB,EAAWC,GACxBiB,QAAQC,IAAI,aAAcnB,EAAEC,GAC5BiB,QAAQC,IAAIV,KAAKD,IAAIa,cAAcrB,EAAGC,GAE1C,KAAC,EAhGgB,CAASqB,EAAAA,c","sources":["PART_9_LAB_Visualization_Analysis/Lab/14_Polygon/index.ts"],"sourcesContent":["import { RendererJSAPI } from '../../../lib'\r\nimport { getJSONFromURL } from 'njscore';\r\n\r\n// https://en.wikipedia.org/wiki/Thematic_map\r\n// https://en.wikipedia.org/wiki/Choropleth_map\r\n\r\n\r\nexport class Solution extends RendererJSAPI {\r\n\r\n    polygons: number [][] = [];\r\n    colors: string[] = [];\r\n    centers: [][] = [];\r\n\r\n    constructor(view: any) {\r\n        super(view);\r\n\r\n        // disable interaction with a base map\r\n        // https://developers.arcgis.com/javascript/latest/api-reference/esri-views-MapView.html\r\n        this.mView.on(\"drag\", (event) => {\r\n            event.stopPropagation();\r\n        });\r\n        this.mView.navigation.mouseWheelZoomEnabled = false;\r\n\r\n        // reposition the center of the basemap\r\n        this.center(-97.893669, 39.176304);\r\n        this.zoom(4);\r\n\r\n\r\n        const canvas = document.createElement('canvas');\r\n        canvas.id = 'layer';\r\n        canvas.width = this.mView.container.clientWidth;\r\n        canvas.height = this.mView.container.clientHeight;\r\n        canvas.style.background= 'rgba(0, 32, 0, 0.6)';\r\n        canvas.style.position = 'absolute';\r\n        canvas.style.pointerEvents = 'none';\r\n        this.mView.container.appendChild(canvas);\r\n\r\n        \r\n        // https://eric.clst.org/tech/usgeojson/\r\n        getJSONFromURL(process.env.PUBLIC_URL + '/static/data/gz_2010_us_050_00_20m.json').then((d) => {\r\n\r\n            const features = d['features'];\r\n\r\n            for(let i = 0 ; i < features.length; ++i) {\r\n                const geometry = features[i]['geometry'];\r\n                // console.log(geometry)\r\n                \r\n                if(geometry['type'] === 'Polygon'){\r\n                    // console.log(geometry['coordinates'].length)\r\n\r\n                    let x = geometry['coordinates'][0][0][0];\r\n                    let y = geometry['coordinates'][0][0][1];\r\n                    const polygon = [];\r\n                    polygon.push(x, y);\r\n\r\n                    for(let j = 1 ; j < geometry['coordinates'][0].length; ++j) {\r\n                        x = geometry['coordinates'][0][j][0];\r\n                        y = geometry['coordinates'][0][j][1];\r\n                        polygon.push(x, y);\r\n\r\n                    }\r\n                    \r\n                    this.colors.push(`rgba(0, 255, 0, ${Math.random() * 0.2 + 0.3})`);\r\n                    this.polygons.push(polygon);\r\n\r\n                }\r\n            }\r\n\r\n            this.start();\r\n        });\r\n    }\r\n    render(ctx: CanvasRenderingContext2D) {\r\n\r\n        for (let i = 0; i < this.polygons.length; ++i) { \r\n\r\n            let x = this.polygons[i][0];\r\n            let y = this.polygons[i][1];\r\n            let projected = this.toScreen(x, y);\r\n\r\n            ctx.beginPath();\r\n            ctx.moveTo(projected[0], projected[1]);\r\n\r\n            for (let j = 2; j < this.polygons[i].length; j += 2) { \r\n                x = this.polygons[i][j];\r\n                y = this.polygons[i][j+1];\r\n                projected = this.toScreen(x, y);\r\n            \r\n                ctx.lineTo(projected[0], projected[1]);\r\n            }\r\n\r\n            ctx.closePath()\r\n            ctx.fillStyle = this.colors[i];\r\n\r\n            ctx.fill();\r\n\r\n        }\r\n        console.log('done!');\r\n        this.isStatic = true;\r\n    }\r\n    public mouseMove(x: number, y: number) {\r\n        console.log('inspecting', x,y);\r\n        console.log(this.ctx.isPointInPath(x, y))\r\n\r\n    }\r\n}\r\n"],"names":["Solution","view","polygons","colors","centers","mView","on","event","stopPropagation","navigation","mouseWheelZoomEnabled","center","zoom","canvas","document","createElement","id","width","container","clientWidth","height","clientHeight","style","background","position","pointerEvents","appendChild","getJSONFromURL","then","d","features","i","length","geometry","x","y","polygon","push","j","Math","random","start","ctx","this","projected","toScreen","beginPath","moveTo","lineTo","closePath","fillStyle","fill","console","log","isStatic","isPointInPath","RendererJSAPI"],"sourceRoot":""}