{"version":3,"file":"static/js/301.dc384dec.chunk.js","mappings":"oQAAaA,EAAQ,WACjB,WAAYC,IAAU,eAClBC,QAAQC,IAAI,kEACZD,QAAQC,IAAI,iCACZD,QAAQC,IAAI,iEA2GhB,CAGC,OAHA,+BACD,WAEA,KAAC,EAlHgB,E","sources":["PART_09_Visualization_Typescirpt/03_Data_Structure/index.ts"],"sourcesContent":["export class Solution {\r\n    constructor(id: any) {\r\n        console.log(\"Let's learn Typescript for digital mapping and visualization!!\");\r\n        console.log(\"03 Typescript, Data structure\");\r\n        console.log(\"==============================================================\");\r\n\r\n        // Codepan\r\n        // https://codepen.io/NJStudio/pen/wvMabpp?editors=1010\r\n\r\n        // Python version \r\n        // https://colab.research.google.com/drive/1hF5YaGvZxKX3ME1MJCTbZkeqPkALz0xS?usp=sharing\r\n\r\n        // Data Structure\r\n        // 8. .................... Array(List)\r\n\r\n        // let theListA = [1,2,3,4,5]\r\n        // let theListB = [\"hello world\"]\r\n        // console.log(theListA)\r\n        // console.log(theListA[3])\r\n\r\n        // console.log(theListB)\r\n\r\n        // theListB.push(3) // theListB.append(3) in Python\r\n        // theListB.push(6)\r\n        // console.log(theListB)\r\n\r\n\r\n        // 9. .................... String\r\n        // Python\r\n        // myData = 'a,b,c,d,e,f';\r\n        // print(myData)\r\n        // dataArray = myData.split(',');\r\n        // print(dataArray)\r\n        // for i in dataArray:\r\n        //   print(i)\r\n\r\n        // let myData = 'a,b,c,d,e,f';\r\n        // console.log(myData);\r\n        // myData = myData.split(',');\r\n\r\n        // for(let i = 0; i < myData.length; i++) {\r\n        // \tconsole.log(myData[i]);\r\n        // }\r\n\r\n        // myData.forEach( (d) => {\r\n        // \t\tconsole.log(d, 'from foreach')\r\n        // \t}\r\n        // );\r\n\r\n\r\n        // 9. .................... Matrix (list of list)\r\n\r\n        // Python\r\n        // myArrayOfArray = [\r\n        //     [1,2,3],\r\n        //     [4,5,6]\r\n        // ]\r\n\r\n        // for i in myArrayOfArray:\r\n        //   # print(i)\r\n        //   for j in i:\r\n        //     print(j)\r\n\r\n        // let myArrayOfArray = [\r\n        //     [1,2,3],\r\n        //     [4,5,6]\r\n        // ]\r\n        // for(let j = 0; j < myArrayOfArray.length; ++j) {\r\n        // \tfor(let i = 0; i < myArrayOfArray[j].length; ++i) {\r\n        // \t\tconsole.log( myArrayOfArray[j][i] );\r\n        // \t}\r\n        // }\r\n\r\n        // console.log( 'index [1][0] ', myArrayOfArray[1][0] )\r\n\r\n\r\n        // 9. .................... Object\r\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\r\n\r\n        // Python\r\n        // https://alligator.io/js/for-of-for-in-loops/\r\n        // https://jsonlint.com/\r\n        // myObject = {\r\n        //     'NJ': 1,\r\n        //     'MJ': 2,\r\n        //     'DJ': 3\r\n        // }\r\n        // print(myObject)\r\n        // for i in myObject:\r\n        //   print(myObject[i])\r\n        //   # print( i, ': ', myObject[i])\r\n\r\n        // let myObject = {\r\n        //     'NJ': 1,\r\n        //     'MJ': 2,\r\n        //     'DJ': 3\r\n        // };\r\n        // for(let i in myObject) {\r\n        // \tconsole.log('key', i, ', value: ', myObject[i]);\r\n        // }\r\n\r\n\r\n        // // JSON stringify\r\n        // const stringJSon = JSON.stringify(myObject)\r\n        // console.log(stringJSon);\r\n\r\n        // // JSON parse\r\n        // const jsonObject = JSON.parse(stringJSon);\r\n        // console.log(jsonObject);\r\n\r\n\r\n    }\r\n    public destroy() {\r\n        \r\n    }\r\n}\r\n"],"names":["Solution","id","console","log"],"sourceRoot":""}