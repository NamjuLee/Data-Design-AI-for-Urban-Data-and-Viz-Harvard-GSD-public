{"version":3,"file":"static/js/9378.cdcb01c7.chunk.js","mappings":"2RAEaA,EAAQ,0CAEjB,WAAYC,GAAsB,IAAD,EAMjB,OANiB,gBAC7B,cAAMA,IAEDC,OAAOC,MAAMC,WAAa,OAG/B,EAAKC,OAAO,CAChB,CA0FC,OA1FA,4BACD,WACI,IAAMC,EAAMC,KAAKD,IAEjBA,EAAIE,YACJF,EAAIG,IAAI,EAAG,EAAG,EAAG,EAAG,MACpBH,EAAII,YAEJJ,EAAIK,UAAY,UAChBL,EAAIM,OAMJC,QAAQC,IAAI,sCAIZ,IAAMC,EAAY,SAACC,EAAWC,GAAyD,IAA9CC,EAAa,uDAAG,UAAWC,EAAS,uDAAG,EAE5Eb,EAAIE,YACJF,EAAIG,IAAIO,EAAGC,EAAGE,EAAG,EAAG,MACpBb,EAAII,YACJJ,EAAIK,UAAYO,EAChBZ,EAAIM,MACR,EAoBMQ,EAAa,GAEnBb,KAAKc,QAAQC,iBAAiB,SAAS,SAACC,GACpCjB,EAAIkB,WAAW,KAAM,IAAK,IAAK,KAG/BJ,EAAWK,KAAK,CAACF,EAAEG,QAASH,EAAEI,UAzBjB,SAACC,GACdtB,EAAIE,YACJF,EAAIuB,OAAOD,EAAI,GAAG,GAAIA,EAAI,GAAG,IAC7B,IAAK,IAAIE,EAAI,EAAGA,EAAIF,EAAIG,SAAUD,EAC9BxB,EAAI0B,OAAOJ,EAAIE,GAAG,GAAIF,EAAIE,GAAG,IAEjCxB,EAAI2B,UAAY,EAChB3B,EAAI4B,YAAc,UAClB5B,EAAI6B,QACR,CAmBIC,CAAShB,GAGT,IAAK,IAAIU,EAAI,EAAGA,EAAIV,EAAWW,SAAUD,EACrCf,EAAUK,EAAWU,GAAG,GAAIV,EAAWU,GAAG,GAGlD,GA4BJ,KAAC,EAnGgB,C,SAASO,e","sources":["PART_04_Geometry_Data/LAB_Web_02_Line_Polyline/index.ts"],"sourcesContent":["import { RendererCanvas } from '../../lib';\r\n\r\nexport class Solution extends RendererCanvas {\r\n\r\n    constructor(div: HTMLDivElement) {\r\n        super(div);\r\n\r\n        this.canvas.style.background = '#fff';\r\n        // this.ctx.translate(this.ctx.canvas.width * 0.5, this.ctx.canvas.height * 0.5);\r\n        // this.ctx.scale(2, 2);\r\n        this.init();\r\n    }\r\n    public init() {\r\n        const ctx = this.ctx;\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(0, 0, 2, 0, 3.14 * 2)\r\n        ctx.closePath();\r\n\r\n        ctx.fillStyle = '#ff0000'\r\n        ctx.fill();\r\n\r\n        // TODO\r\n        // You code goes here for one time operation\r\n        // Reference: https://codepen.io/NJStudio/pen/bGVzvMP?editors=1010\r\n\r\n        console.log('workshop-canvas 02 Line & Polyline');\r\n\r\n\r\n\r\n        const drawPoint = (x: number, y: number, color: string = '#121212', r: number = 5) => {\r\n            // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/arc\r\n            ctx.beginPath();\r\n            ctx.arc(x, y, r, 0, 3.14 * 2)\r\n            ctx.closePath()\r\n            ctx.fillStyle = color;\r\n            ctx.fill()\r\n        }\r\n        const drawLine = (pts: number[][]) => {\r\n            ctx.beginPath();\r\n            ctx.moveTo(pts[0][0], pts[0][1]);\r\n            for (let i = 1; i < pts.length; ++i) {\r\n                ctx.lineTo(pts[i][0], pts[i][1]);\r\n            }\r\n            ctx.lineWidth = 2;\r\n            ctx.strokeStyle = '#00ff00';\r\n            ctx.stroke();\r\n        }\r\n\r\n\r\n        /////////////////////////////////////////////////////////////\r\n        // ......................................your code goes here\r\n        /////////////////////////////////////////////////////////////\r\n\r\n\r\n        // (1) .................... interactive drawing point and line\r\n\r\n        const listPoint2 = []\r\n\r\n        this.divHost.addEventListener('click', (e: MouseEvent) => {\r\n            ctx.clearRect(-200, -200, 400, 400);\r\n            // console.log(`mouse x: ${e.offsetX}, y: ${e.offsetY}`);\r\n            // add a position to the list\r\n            listPoint2.push([e.offsetX, e.offsetY]);\r\n\r\n            // draw lines by the array\r\n            drawLine(listPoint2);\r\n\r\n            // loop for draw points by the array\r\n            for (let i = 0; i < listPoint2.length; ++i) {\r\n                drawPoint(listPoint2[i][0], listPoint2[i][1]);\r\n            }\r\n\r\n        });\r\n\r\n        // (2) .................... interactive drawing point and line\r\n        // const listPoint = []\r\n\r\n        // div.addEventListener('click', (e: MouseEvent) =>{\r\n        //   ctx.clearRect(-200, -200, 400, 400);\r\n        //   console.log(`mouse x: ${e.x}, y: ${e.y}` );\r\n\r\n        //   // if the length of the list is begger tahn 5, we remove the iteam in the first index.\r\n        //   if(listPoint.length > 5) {\r\n        //     listPoint.shift();\r\n        //   }\r\n\r\n        //   // add a position to the list\r\n        //   listPoint.push([e.x - 210, e.y - 210]);\r\n\r\n        //   // draw lines by the array\r\n        //   drawLine(listPoint);\r\n\r\n        //   // loop for draw points by the array\r\n        //   for(let i = 0; i < listPoint.length; ++i) {\r\n        //     drawPoint(listPoint[i][0], listPoint[i][1]);\r\n        //   }\r\n\r\n        // });\r\n\r\n\r\n    }\r\n}\r\n"],"names":["Solution","div","canvas","style","background","init","ctx","this","beginPath","arc","closePath","fillStyle","fill","console","log","drawPoint","x","y","color","r","listPoint2","divHost","addEventListener","e","clearRect","push","offsetX","offsetY","pts","moveTo","i","length","lineTo","lineWidth","strokeStyle","stroke","drawLine","RendererCanvas"],"sourceRoot":""}